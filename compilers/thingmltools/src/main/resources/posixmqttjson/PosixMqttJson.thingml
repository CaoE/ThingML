
/****************************************************************/
/*                                                              */
/*  !!! THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT  !!! */
/*                                                              */
/****************************************************************/

/*IMPORTS*/


thing /*THING_NAME*/ includes /*THING_INCLUDES*/ 
@c_header `#include "jsmn.h"`
{
	
	required port posixmqtt 
	@sync_send "true"
	{
		sends mqtt_publish, mqtt_subscribe
		receives mqtt_message, mqtt_connected
	}
	
	function posixmqtt_subscribe() do
/*SUBSCRIBE*/		
	end
	
	function posixmqtt_parsemsg(topic : String, payload : String, len : UInt32) : Boolean do
	
		// Variables to be used for parsing the JSON payload
		`jsmn_parser parser;
		jsmn_init(&parser);
		jsmntok_t tokens[32];` // 32 should be adjusted for the largest message to be parsed
		var parse_result : Int16
		
		// `printf("Topic:%s, Payload:%s\n", `&topic&`, `&payload&`);`
		
		parse_result = `jsmn_parse(&parser, `&payload&`, `&len&`, tokens, 32);`
	
/*PARSEMSG*/
		do
			print "Received an unhandled message\n"
		end
		
		return false

	end
	
	
	statechart PosixMQTTJSonSC init Running {
	
		internal event posixmqtt?mqtt_connected action posixmqtt_subscribe()
		internal event m : posixmqtt?mqtt_message action posixmqtt_parsemsg(m.topic, m.payload, m.size)

/*SEND_HANDLERS*/

		state Running {}
		
	}
}

