/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 */
/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
public class Main {
//Things
public static MQTTAdapterTest MQTTAdapterTest_test1;
public static TimerJava TimerJava_timer;
public static JavaMQTTAdapter JavaMQTTAdapter_adapter1;
public static void main(String args[]) {
//Things
MQTTAdapterTest_test1 = (MQTTAdapterTest) new MQTTAdapterTest();
MQTTAdapterTest_test1.buildBehavior(null, null);
MQTTAdapterTest_test1.init();
TimerJava_timer = (TimerJava) new TimerJava();
TimerJava_timer.buildBehavior(null, null);
TimerJava_timer.init();
JavaMQTTAdapter_adapter1 = (JavaMQTTAdapter) new JavaMQTTAdapter();
JavaMQTTAdapter_adapter1.buildBehavior(null, null);
JavaMQTTAdapter_adapter1.init();
//Connecting internal ports...
//Connectors
TimerJava_timer.getTimer_port().addListener(MQTTAdapterTest_test1.getClock_port());
MQTTAdapterTest_test1.getClock_port().addListener(TimerJava_timer.getTimer_port());
JavaMQTTAdapter_adapter1.getMqtt_port().addListener(MQTTAdapterTest_test1.getMqtt_port());
MQTTAdapterTest_test1.getMqtt_port().addListener(JavaMQTTAdapter_adapter1.getMqtt_port());
MQTTAdapterTest_test1.initMQTTAdapterTest_client_id_var((String) ("Test1"));
MQTTAdapterTest_test1.initMQTTAdapterTest_broker_host_var((String) ("mqtt.tutorials.tellucloud.com"));
MQTTAdapterTest_test1.initMQTTAdapterTest_broker_port_var((int) (1883));
MQTTAdapterTest_test1.initMQTTAdapterTest_broker_user_var((String) ("models18"));
MQTTAdapterTest_test1.initMQTTAdapterTest_broker_pass_var((String) ("thingml"));
MQTTAdapterTest_test1.initMQTTAdapterTest_broker_tls_var((boolean) (false));
MQTTAdapterTest_test1.initMQTTAdapterTest_timer_id_var((short) (1));
JavaMQTTAdapter_adapter1.initJavaMQTTAdapter_broker_uri_var((String) ("tcp://localhost:1883"));
JavaMQTTAdapter_adapter1.initJavaMQTTAdapter_client_id_var((String) (null));
JavaMQTTAdapter_adapter1.initJavaMQTTAdapter_username_var((String) (null));
JavaMQTTAdapter_adapter1.initJavaMQTTAdapter_password_var((String) (null));
JavaMQTTAdapter_adapter1.initJavaMQTTAdapter_topic_prefix_var((String) (null));
//Init instances (queues, etc)
//Network components for external connectors
/*$NETWORK$*/
//External Connectors
/*$EXT CONNECTORS$*/
/*$START$*/
TimerJava_timer.start();
JavaMQTTAdapter_adapter1.start();
MQTTAdapterTest_test1.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
MQTTAdapterTest_test1.stop();
JavaMQTTAdapter_adapter1.stop();
TimerJava_timer.stop();
/*$STOP$*/
}
});

}
}
