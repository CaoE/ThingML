import "../../datatypes.thingml"
import "../../thingml.thingml"
import "../dnssd_publisher.thingml"
import "../dnssd_messages.thingml"
import "clock.thingml"



thing DNSController includes DNSSDCtrlMsgs, ClockMsgs {

	required port ctrlport {
		sends publish_service, unpublish_service
		receives published_service
	}
	
	required port tick_signal {
        receives clock_tick
    }
    
    statechart Behavior init Init {
    	
    	state Init {
    	
    		transition->Unpublish
    		event ctrlport?published_service
    		
    	}
    	
    	state Unpublish {
    	
    		transition->Publish
    		event tick_signal?clock_tick
    		action do
    			ctrlport!unpublish_service()
    		end
    	}
    	
    	state Publish {
    	
    		transition->Init
    		event tick_signal?clock_tick
    		action do
    			ctrlport!publish_service()
    		end
    	}
    }
}

protocol DNSSD
	@serializer ""
	@trace_level "0"
;

configuration DNSSDPublishExample {
	instance clock : ClockLinux
		set clock.period = 5000
		
	instance publisher : DNSSDServicePublisher

    connector publisher.dnssdport over DNSSD
    	@dnssd_service_name  "MegaPrinter"
        @dnssd_service_type  "_ipp._tcp"
        @dnssd_service_port  "651"
        @dnssd_service_txt  "test=blah"
        //@dnssd_service_domain  ""
        //@dnssd_service_host  "" 
       
	instance dnsctrl : DNSController     
	connector dnsctrl.ctrlport => publisher.ctrlport
	connector dnsctrl.tick_signal => clock.signal
}
