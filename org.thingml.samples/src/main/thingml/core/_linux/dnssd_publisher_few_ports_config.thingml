import "../../datatypes.thingml"
import "../../thingml.thingml"
import "../dnssd_publisher_trivial.thingml"


protocol DNSSD
	@serializer ""
	@trace_level "0"
	@dnssd_success_callback "dnssd_srv_publish_success"
	@dnssd_failure_callback "dnssd_srv_publish_failure"
	@dnssd_publish_service "dnssd_publish_service"
	@dnssd_unpublish_service "dnssd_unpublish_service"
;

configuration DNSSDPublishFewPortsExample {
		
	instance publisher : DNSSDServicePublisher

    connector publisher.dnssdport over DNSSD
    	@dnssd_service_name  "MegaPrinter"
        @dnssd_service_type  "_ipp._tcp"
        @dnssd_service_port  "651"
        @dnssd_service_txt  "test=blah"
        //@dnssd_service_domain  ""
        //@dnssd_service_host  ""
        
    connector publisher.dnssdport1 over DNSSD
    	@dnssd_service_name  "MegaPrinter1"
        @dnssd_service_type  "_ipp._tcp"
        @dnssd_service_port  "651"
        @dnssd_service_txt  "test=blah"
        //@dnssd_service_domain  ""
        //@dnssd_service_host  ""
        
   	instance publisheranother : DNSSDServicePublisher

    connector publisheranother.dnssdport over DNSSD
    	@dnssd_service_name  "MegaPrinterAnother"
        @dnssd_service_type  "_ipp._tcp"
        @dnssd_service_port  "651"
        @dnssd_service_txt  "test=blah"
        //@dnssd_service_domain  ""
        //@dnssd_service_host  ""
        
    connector publisheranother.dnssdport1 over DNSSD
    	@dnssd_service_name  "MegaPrinterAnother1"
        @dnssd_service_type  "_ipp._tcp"
        @dnssd_service_port  "651"
        @dnssd_service_txt  "test=blah"
        //@dnssd_service_domain  ""
        //@dnssd_service_host  "" 
}
