/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 */
/**
 * generated by Xtext 2.10.0
 */
package org.thingml.xtext.ui.labeling;

import com.google.common.base.Objects;
import com.google.inject.Inject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.thingml.xtext.thingML.CompositeState;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class ThingMLLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public ThingMLLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final CompositeState sm) {
    String _xblockexpression = null;
    {
      String result = "[SM";
      String _name = sm.getName();
      boolean _notEquals = (!Objects.equal(_name, null));
      if (_notEquals) {
        String _result = result;
        String _name_1 = sm.getName();
        String _plus = (" " + _name_1);
        result = (_result + _plus);
      }
      String _result_1 = result;
      _xblockexpression = result = (_result_1 + "]");
    }
    return _xblockexpression;
  }
}
