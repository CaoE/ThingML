/**
 * Copyright (C) 2014 SINTEF <franck.fleurey@sintef.no>
 *
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * generated by Xtext 2.9.1
 */
package org.thingml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ThingMLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ThingMLModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ThingMLModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cImportsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cImportsThingMLModelCrossReference_0_1_0 = (CrossReference)cImportsAssignment_0_1.eContents().get(0);
		private final RuleCall cImportsThingMLModelSTRING_LITTerminalRuleCall_0_1_0_1 = (RuleCall)cImportsThingMLModelCrossReference_0_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cTypesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cTypesTypeParserRuleCall_1_0_0 = (RuleCall)cTypesAssignment_1_0.eContents().get(0);
		private final Assignment cProtocolsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cProtocolsProtocolParserRuleCall_1_1_0 = (RuleCall)cProtocolsAssignment_1_1.eContents().get(0);
		private final Assignment cConfigsAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cConfigsConfigurationParserRuleCall_1_2_0 = (RuleCall)cConfigsAssignment_1_2.eContents().get(0);
		
		//ThingMLModel:
		//	('import' imports+=[ThingMLModel|STRING_LIT])* (types+=Type | protocols+=Protocol | configs+=Configuration)*;
		@Override public ParserRule getRule() { return rule; }
		
		//('import' imports+=[ThingMLModel|STRING_LIT])* (types+=Type | protocols+=Protocol | configs+=Configuration)*
		public Group getGroup() { return cGroup; }
		
		//('import' imports+=[ThingMLModel|STRING_LIT])*
		public Group getGroup_0() { return cGroup_0; }
		
		//'import'
		public Keyword getImportKeyword_0_0() { return cImportKeyword_0_0; }
		
		//imports+=[ThingMLModel|STRING_LIT]
		public Assignment getImportsAssignment_0_1() { return cImportsAssignment_0_1; }
		
		//[ThingMLModel|STRING_LIT]
		public CrossReference getImportsThingMLModelCrossReference_0_1_0() { return cImportsThingMLModelCrossReference_0_1_0; }
		
		//STRING_LIT
		public RuleCall getImportsThingMLModelSTRING_LITTerminalRuleCall_0_1_0_1() { return cImportsThingMLModelSTRING_LITTerminalRuleCall_0_1_0_1; }
		
		//(types+=Type | protocols+=Protocol | configs+=Configuration)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//types+=Type
		public Assignment getTypesAssignment_1_0() { return cTypesAssignment_1_0; }
		
		//Type
		public RuleCall getTypesTypeParserRuleCall_1_0_0() { return cTypesTypeParserRuleCall_1_0_0; }
		
		//protocols+=Protocol
		public Assignment getProtocolsAssignment_1_1() { return cProtocolsAssignment_1_1; }
		
		//Protocol
		public RuleCall getProtocolsProtocolParserRuleCall_1_1_0() { return cProtocolsProtocolParserRuleCall_1_1_0; }
		
		//configs+=Configuration
		public Assignment getConfigsAssignment_1_2() { return cConfigsAssignment_1_2; }
		
		//Configuration
		public RuleCall getConfigsConfigurationParserRuleCall_1_2_0() { return cConfigsConfigurationParserRuleCall_1_2_0; }
	}
	public class PlatformAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.PlatformAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRING_LITTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//PlatformAnnotation:
		//	'@' name=ID value=STRING_LIT;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' name=ID value=STRING_LIT
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//value=STRING_LIT
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING_LIT
		public RuleCall getValueSTRING_LITTerminalRuleCall_2_0() { return cValueSTRING_LITTerminalRuleCall_2_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjectTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cThingParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		/// *****************************************************************************
		// *       TYPES / ENUMERATIONS                                                *
		// ***************************************************************************** / Type:
		//	PrimitiveType | ObjectType | Enumeration | Thing;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimitiveType | ObjectType | Enumeration | Thing
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypeParserRuleCall_0() { return cPrimitiveTypeParserRuleCall_0; }
		
		//ObjectType
		public RuleCall getObjectTypeParserRuleCall_1() { return cObjectTypeParserRuleCall_1; }
		
		//Enumeration
		public RuleCall getEnumerationParserRuleCall_2() { return cEnumerationParserRuleCall_2; }
		
		//Thing
		public RuleCall getThingParserRuleCall_3() { return cThingParserRuleCall_3; }
	}
	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.PrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cByteSizeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cByteSizeINTTerminalRuleCall_3_0 = (RuleCall)cByteSizeAssignment_3.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PrimitiveType:
		//	'datatype' name=ID '<' ByteSize=INT '>' annotations+=PlatformAnnotation* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID '<' ByteSize=INT '>' annotations+=PlatformAnnotation* ';'
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//ByteSize=INT
		public Assignment getByteSizeAssignment_3() { return cByteSizeAssignment_3; }
		
		//INT
		public RuleCall getByteSizeINTTerminalRuleCall_3_0() { return cByteSizeINTTerminalRuleCall_3_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ObjectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ObjectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ObjectType:
		//	'object' name=ID annotations+=PlatformAnnotation* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'object' name=ID annotations+=PlatformAnnotation* ';'
		public Group getGroup() { return cGroup; }
		
		//'object'
		public Keyword getObjectKeyword_0() { return cObjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumerationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLiteralsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLiteralsEnumerationLiteralParserRuleCall_4_0 = (RuleCall)cLiteralsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Enumeration:
		//	'enumeration' name=ID annotations+=PlatformAnnotation* '{' literals+=EnumerationLiteral* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'enumeration' name=ID annotations+=PlatformAnnotation* '{' literals+=EnumerationLiteral* '}'
		public Group getGroup() { return cGroup; }
		
		//'enumeration'
		public Keyword getEnumerationKeyword_0() { return cEnumerationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//literals+=EnumerationLiteral*
		public Assignment getLiteralsAssignment_4() { return cLiteralsAssignment_4; }
		
		//EnumerationLiteral
		public RuleCall getLiteralsEnumerationLiteralParserRuleCall_4_0() { return cLiteralsEnumerationLiteralParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EnumerationLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.EnumerationLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		
		//EnumerationLiteral:
		//	name=ID annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_1_0() { return cAnnotationsPlatformAnnotationParserRuleCall_1_0; }
	}
	public class ThingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Thing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFragmentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFragmentFragmentKeyword_1_0 = (Keyword)cFragmentAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIncludesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIncludesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cIncludesThingCrossReference_3_1_0 = (CrossReference)cIncludesAssignment_3_1.eContents().get(0);
		private final RuleCall cIncludesThingIDTerminalRuleCall_3_1_0_1 = (RuleCall)cIncludesThingCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cIncludesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cIncludesThingCrossReference_3_2_1_0 = (CrossReference)cIncludesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cIncludesThingIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cIncludesThingCrossReference_3_2_1_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cMessagesAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cMessagesMessageParserRuleCall_6_0_0 = (RuleCall)cMessagesAssignment_6_0.eContents().get(0);
		private final Assignment cPortsAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cPortsPortParserRuleCall_6_1_0 = (RuleCall)cPortsAssignment_6_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_2_0 = (RuleCall)cPropertiesAssignment_6_2.eContents().get(0);
		private final Assignment cFunctionsAssignment_6_3 = (Assignment)cAlternatives_6.eContents().get(3);
		private final RuleCall cFunctionsFunctionParserRuleCall_6_3_0 = (RuleCall)cFunctionsAssignment_6_3.eContents().get(0);
		private final Assignment cAssignAssignment_6_4 = (Assignment)cAlternatives_6.eContents().get(4);
		private final RuleCall cAssignPropertyAssignParserRuleCall_6_4_0 = (RuleCall)cAssignAssignment_6_4.eContents().get(0);
		private final Assignment cBehaviourAssignment_6_5 = (Assignment)cAlternatives_6.eContents().get(5);
		private final RuleCall cBehaviourStateMachineParserRuleCall_6_5_0 = (RuleCall)cBehaviourAssignment_6_5.eContents().get(0);
		private final Assignment cStreamsAssignment_6_6 = (Assignment)cAlternatives_6.eContents().get(6);
		private final RuleCall cStreamsStreamParserRuleCall_6_6_0 = (RuleCall)cStreamsAssignment_6_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *****************************************************************************
		// *       THING / COMPONENT MODEL                                             *
		// ***************************************************************************** / Thing:
		//	'thing' ^fragment?='fragment'? name=ID ('includes' includes+=[Thing] ("," includes+=[Thing])*)?
		//	annotations+=PlatformAnnotation* '{' (messages+=Message | ports+=Port | properties+=Property | functions+=Function |
		//	assign+=PropertyAssign | behaviour+=StateMachine | streams+=Stream)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'thing' ^fragment?='fragment'? name=ID ('includes' includes+=[Thing] ("," includes+=[Thing])*)?
		//annotations+=PlatformAnnotation* '{' (messages+=Message | ports+=Port | properties+=Property | functions+=Function |
		//assign+=PropertyAssign | behaviour+=StateMachine | streams+=Stream)* '}'
		public Group getGroup() { return cGroup; }
		
		//'thing'
		public Keyword getThingKeyword_0() { return cThingKeyword_0; }
		
		//^fragment?='fragment'?
		public Assignment getFragmentAssignment_1() { return cFragmentAssignment_1; }
		
		//'fragment'
		public Keyword getFragmentFragmentKeyword_1_0() { return cFragmentFragmentKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('includes' includes+=[Thing] ("," includes+=[Thing])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'includes'
		public Keyword getIncludesKeyword_3_0() { return cIncludesKeyword_3_0; }
		
		//includes+=[Thing]
		public Assignment getIncludesAssignment_3_1() { return cIncludesAssignment_3_1; }
		
		//[Thing]
		public CrossReference getIncludesThingCrossReference_3_1_0() { return cIncludesThingCrossReference_3_1_0; }
		
		//ID
		public RuleCall getIncludesThingIDTerminalRuleCall_3_1_0_1() { return cIncludesThingIDTerminalRuleCall_3_1_0_1; }
		
		//("," includes+=[Thing])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//includes+=[Thing]
		public Assignment getIncludesAssignment_3_2_1() { return cIncludesAssignment_3_2_1; }
		
		//[Thing]
		public CrossReference getIncludesThingCrossReference_3_2_1_0() { return cIncludesThingCrossReference_3_2_1_0; }
		
		//ID
		public RuleCall getIncludesThingIDTerminalRuleCall_3_2_1_0_1() { return cIncludesThingIDTerminalRuleCall_3_2_1_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(messages+=Message | ports+=Port | properties+=Property | functions+=Function | assign+=PropertyAssign |
		//behaviour+=StateMachine | streams+=Stream)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//messages+=Message
		public Assignment getMessagesAssignment_6_0() { return cMessagesAssignment_6_0; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_6_0_0() { return cMessagesMessageParserRuleCall_6_0_0; }
		
		//ports+=Port
		public Assignment getPortsAssignment_6_1() { return cPortsAssignment_6_1; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_6_1_0() { return cPortsPortParserRuleCall_6_1_0; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_6_2() { return cPropertiesAssignment_6_2; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_2_0() { return cPropertiesPropertyParserRuleCall_6_2_0; }
		
		//functions+=Function
		public Assignment getFunctionsAssignment_6_3() { return cFunctionsAssignment_6_3; }
		
		//Function
		public RuleCall getFunctionsFunctionParserRuleCall_6_3_0() { return cFunctionsFunctionParserRuleCall_6_3_0; }
		
		//assign+=PropertyAssign
		public Assignment getAssignAssignment_6_4() { return cAssignAssignment_6_4; }
		
		//PropertyAssign
		public RuleCall getAssignPropertyAssignParserRuleCall_6_4_0() { return cAssignPropertyAssignParserRuleCall_6_4_0; }
		
		//behaviour+=StateMachine
		public Assignment getBehaviourAssignment_6_5() { return cBehaviourAssignment_6_5; }
		
		//StateMachine
		public RuleCall getBehaviourStateMachineParserRuleCall_6_5_0() { return cBehaviourStateMachineParserRuleCall_6_5_0; }
		
		//streams+=Stream
		public Assignment getStreamsAssignment_6_6() { return cStreamsAssignment_6_6; }
		
		//Stream
		public RuleCall getStreamsStreamParserRuleCall_6_6_0() { return cStreamsStreamParserRuleCall_6_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PropertyAssignElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.PropertyAssign");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPropertyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPropertyPropertyCrossReference_1_0 = (CrossReference)cPropertyAssignment_1.eContents().get(0);
		private final RuleCall cPropertyPropertyIDTerminalRuleCall_1_0_1 = (RuleCall)cPropertyPropertyCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIndexAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIndexExpressionParserRuleCall_2_1_0 = (RuleCall)cIndexAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInitExpressionParserRuleCall_4_0 = (RuleCall)cInitAssignment_4.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		
		//PropertyAssign:
		//	'set' property=[Property] ('[' index+=Expression ']')* '=' init=Expression annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'set' property=[Property] ('[' index+=Expression ']')* '=' init=Expression annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'set'
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }
		
		//property=[Property]
		public Assignment getPropertyAssignment_1() { return cPropertyAssignment_1; }
		
		//[Property]
		public CrossReference getPropertyPropertyCrossReference_1_0() { return cPropertyPropertyCrossReference_1_0; }
		
		//ID
		public RuleCall getPropertyPropertyIDTerminalRuleCall_1_0_1() { return cPropertyPropertyIDTerminalRuleCall_1_0_1; }
		
		//('[' index+=Expression ']')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//index+=Expression
		public Assignment getIndexAssignment_2_1() { return cIndexAssignment_2_1; }
		
		//Expression
		public RuleCall getIndexExpressionParserRuleCall_2_1_0() { return cIndexExpressionParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//init=Expression
		public Assignment getInitAssignment_4() { return cInitAssignment_4; }
		
		//Expression
		public RuleCall getInitExpressionParserRuleCall_4_0() { return cInitExpressionParserRuleCall_4_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
	}
	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Protocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProtocolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Protocol:
		//	'protocol' name=ID annotations+=PlatformAnnotation* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'protocol' name=ID annotations+=PlatformAnnotation* ';'
		public Group getGroup() { return cGroup; }
		
		//'protocol'
		public Keyword getProtocolKeyword_0() { return cProtocolKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersParameterParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_6_1_0 = (CrossReference)cTypeAssignment_6_1.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_6_1_0_1 = (RuleCall)cTypeTypeCrossReference_6_1_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_7_0 = (RuleCall)cAnnotationsAssignment_7.eContents().get(0);
		private final Keyword cIsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBodyAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBodyActionParserRuleCall_9_0 = (RuleCall)cBodyAssignment_9.eContents().get(0);
		
		//Function:
		//	'function' name=ID '(' parameters+=Parameter ("," parameters+=Parameter)* ')' (':' type=[Type])?
		//	annotations+=PlatformAnnotation* 'is' body=Action
		//	//('isArray' isArray=EBoolean)?
		//	//('cardinality' cardinality=Expression)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'function' name=ID '(' parameters+=Parameter ("," parameters+=Parameter)* ')' (':' type=[Type])?
		//annotations+=PlatformAnnotation* 'is' body=Action
		public Group getGroup() { return cGroup; }
		
		//'function'
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_3_0() { return cParametersParameterParserRuleCall_3_0; }
		
		//("," parameters+=Parameter)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_1_0() { return cParametersParameterParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//(':' type=[Type])?
		public Group getGroup_6() { return cGroup_6; }
		
		//':'
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }
		
		//type=[Type]
		public Assignment getTypeAssignment_6_1() { return cTypeAssignment_6_1; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_6_1_0() { return cTypeTypeCrossReference_6_1_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_6_1_0_1() { return cTypeTypeIDTerminalRuleCall_6_1_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_7() { return cAnnotationsAssignment_7; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_7_0() { return cAnnotationsPlatformAnnotationParserRuleCall_7_0; }
		
		//'is'
		public Keyword getIsKeyword_8() { return cIsKeyword_8; }
		
		//body=Action
		public Assignment getBodyAssignment_9() { return cBodyAssignment_9; }
		
		//Action
		public RuleCall getBodyActionParserRuleCall_9_0() { return cBodyActionParserRuleCall_9_0; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInitAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInitExpressionParserRuleCall_4_1_0 = (RuleCall)cInitAssignment_4_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		
		//Property:
		//	'property' name=ID ':' type=[Type] ('=' init=Expression)?
		//	annotations+=PlatformAnnotation*
		//	//('isArray' isArray=EBoolean)?
		//	//('changeable' changeable=EBoolean)?
		//	//('cardinality' cardinality=Expression)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'property' name=ID ':' type=[Type] ('=' init=Expression)? annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'property'
		public Keyword getPropertyKeyword_0() { return cPropertyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[Type]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_3_0_1() { return cTypeTypeIDTerminalRuleCall_3_0_1; }
		
		//('=' init=Expression)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }
		
		//init=Expression
		public Assignment getInitAssignment_4_1() { return cInitAssignment_4_1; }
		
		//Expression
		public RuleCall getInitExpressionParserRuleCall_4_1_0() { return cInitExpressionParserRuleCall_4_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_3_0_0 = (RuleCall)cParametersAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParametersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_3_1_1_0 = (RuleCall)cParametersAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Message:
		//	'message' name=ID '(' (parameters+=Parameter ("," parameters+=Parameter)*)? ')'
		//	annotations+=PlatformAnnotation* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'message' name=ID '(' (parameters+=Parameter ("," parameters+=Parameter)*)? ')' annotations+=PlatformAnnotation* ';'
		public Group getGroup() { return cGroup; }
		
		//'message'
		public Keyword getMessageKeyword_0() { return cMessageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(parameters+=Parameter ("," parameters+=Parameter)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_3_0() { return cParametersAssignment_3_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_3_0_0() { return cParametersParameterParserRuleCall_3_0_0; }
		
		//("," parameters+=Parameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_3_1_1() { return cParametersAssignment_3_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_3_1_1_0() { return cParametersParameterParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		
		//Parameter:
		//	name=ID ':' type=[Type] annotations+=PlatformAnnotation*
		//	//		('isArray' isArray=EBoolean)?
		//	//		('cardinality' cardinality=Expression)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' type=[Type] annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[Type]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_2_0_1() { return cTypeTypeIDTerminalRuleCall_2_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_3_0() { return cAnnotationsPlatformAnnotationParserRuleCall_3_0; }
	}
	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Port");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRequiredPortParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProvidedPortParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInternalPortParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Port:
		//	RequiredPort | ProvidedPort | InternalPort;
		@Override public ParserRule getRule() { return rule; }
		
		//RequiredPort | ProvidedPort | InternalPort
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RequiredPort
		public RuleCall getRequiredPortParserRuleCall_0() { return cRequiredPortParserRuleCall_0; }
		
		//ProvidedPort
		public RuleCall getProvidedPortParserRuleCall_1() { return cProvidedPortParserRuleCall_1; }
		
		//InternalPort
		public RuleCall getInternalPortParserRuleCall_2() { return cInternalPortParserRuleCall_2; }
	}
	public class RequiredPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.RequiredPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Keyword cRequiredKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPortKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cSendsKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cSendsAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_6_0_1_0 = (CrossReference)cSendsAssignment_6_0_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_6_0_1_0_1 = (RuleCall)cSendsMessageCrossReference_6_0_1_0.eContents().get(1);
		private final Group cGroup_6_0_2 = (Group)cGroup_6_0.eContents().get(2);
		private final Keyword cCommaKeyword_6_0_2_0 = (Keyword)cGroup_6_0_2.eContents().get(0);
		private final Assignment cSendsAssignment_6_0_2_1 = (Assignment)cGroup_6_0_2.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_6_0_2_1_0 = (CrossReference)cSendsAssignment_6_0_2_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_6_0_2_1_0_1 = (RuleCall)cSendsMessageCrossReference_6_0_2_1_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cReceivesKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cReceivesAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_6_1_1_0 = (CrossReference)cReceivesAssignment_6_1_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_6_1_1_0_1 = (RuleCall)cReceivesMessageCrossReference_6_1_1_0.eContents().get(1);
		private final Group cGroup_6_1_2 = (Group)cGroup_6_1.eContents().get(2);
		private final Keyword cCommaKeyword_6_1_2_0 = (Keyword)cGroup_6_1_2.eContents().get(0);
		private final Assignment cReceivesAssignment_6_1_2_1 = (Assignment)cGroup_6_1_2.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_6_1_2_1_0 = (CrossReference)cReceivesAssignment_6_1_2_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_6_1_2_1_0_1 = (RuleCall)cReceivesMessageCrossReference_6_1_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RequiredPort:
		//	optional?='optional'? 'required' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] (","
		//	sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//optional?='optional'? 'required' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] (","
		//sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)* '}'
		public Group getGroup() { return cGroup; }
		
		//optional?='optional'?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//'required'
		public Keyword getRequiredKeyword_1() { return cRequiredKeyword_1; }
		
		//'port'
		public Keyword getPortKeyword_2() { return cPortKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//('sends' sends+=[Message] ("," sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//'sends' sends+=[Message] ("," sends+=[Message])*
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'sends'
		public Keyword getSendsKeyword_6_0_0() { return cSendsKeyword_6_0_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_6_0_1() { return cSendsAssignment_6_0_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_6_0_1_0() { return cSendsMessageCrossReference_6_0_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_6_0_1_0_1() { return cSendsMessageIDTerminalRuleCall_6_0_1_0_1; }
		
		//("," sends+=[Message])*
		public Group getGroup_6_0_2() { return cGroup_6_0_2; }
		
		//","
		public Keyword getCommaKeyword_6_0_2_0() { return cCommaKeyword_6_0_2_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_6_0_2_1() { return cSendsAssignment_6_0_2_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_6_0_2_1_0() { return cSendsMessageCrossReference_6_0_2_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_6_0_2_1_0_1() { return cSendsMessageIDTerminalRuleCall_6_0_2_1_0_1; }
		
		//'receives' receives+=[Message] ("," receives+=[Message])*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'receives'
		public Keyword getReceivesKeyword_6_1_0() { return cReceivesKeyword_6_1_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_6_1_1() { return cReceivesAssignment_6_1_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_6_1_1_0() { return cReceivesMessageCrossReference_6_1_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_6_1_1_0_1() { return cReceivesMessageIDTerminalRuleCall_6_1_1_0_1; }
		
		//("," receives+=[Message])*
		public Group getGroup_6_1_2() { return cGroup_6_1_2; }
		
		//","
		public Keyword getCommaKeyword_6_1_2_0() { return cCommaKeyword_6_1_2_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_6_1_2_1() { return cReceivesAssignment_6_1_2_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_6_1_2_1_0() { return cReceivesMessageCrossReference_6_1_2_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_6_1_2_1_0_1() { return cReceivesMessageIDTerminalRuleCall_6_1_2_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ProvidedPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ProvidedPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProvidedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cSendsKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cSendsAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_5_0_1_0 = (CrossReference)cSendsAssignment_5_0_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_5_0_1_0_1 = (RuleCall)cSendsMessageCrossReference_5_0_1_0.eContents().get(1);
		private final Group cGroup_5_0_2 = (Group)cGroup_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_5_0_2_0 = (Keyword)cGroup_5_0_2.eContents().get(0);
		private final Assignment cSendsAssignment_5_0_2_1 = (Assignment)cGroup_5_0_2.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_5_0_2_1_0 = (CrossReference)cSendsAssignment_5_0_2_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_5_0_2_1_0_1 = (RuleCall)cSendsMessageCrossReference_5_0_2_1_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cReceivesKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cReceivesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_5_1_1_0 = (CrossReference)cReceivesAssignment_5_1_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cReceivesMessageCrossReference_5_1_1_0.eContents().get(1);
		private final Group cGroup_5_1_2 = (Group)cGroup_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_5_1_2_0 = (Keyword)cGroup_5_1_2.eContents().get(0);
		private final Assignment cReceivesAssignment_5_1_2_1 = (Assignment)cGroup_5_1_2.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_5_1_2_1_0 = (CrossReference)cReceivesAssignment_5_1_2_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1 = (RuleCall)cReceivesMessageCrossReference_5_1_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ProvidedPort:
		//	'provided' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
		//	'receives' receives+=[Message] ("," receives+=[Message])*)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'provided' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
		//'receives' receives+=[Message] ("," receives+=[Message])*)* '}'
		public Group getGroup() { return cGroup; }
		
		//'provided'
		public Keyword getProvidedKeyword_0() { return cProvidedKeyword_0; }
		
		//'port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_3_0() { return cAnnotationsPlatformAnnotationParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('sends' sends+=[Message] ("," sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//'sends' sends+=[Message] ("," sends+=[Message])*
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'sends'
		public Keyword getSendsKeyword_5_0_0() { return cSendsKeyword_5_0_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_5_0_1() { return cSendsAssignment_5_0_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_5_0_1_0() { return cSendsMessageCrossReference_5_0_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_5_0_1_0_1() { return cSendsMessageIDTerminalRuleCall_5_0_1_0_1; }
		
		//("," sends+=[Message])*
		public Group getGroup_5_0_2() { return cGroup_5_0_2; }
		
		//","
		public Keyword getCommaKeyword_5_0_2_0() { return cCommaKeyword_5_0_2_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_5_0_2_1() { return cSendsAssignment_5_0_2_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_5_0_2_1_0() { return cSendsMessageCrossReference_5_0_2_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_5_0_2_1_0_1() { return cSendsMessageIDTerminalRuleCall_5_0_2_1_0_1; }
		
		//'receives' receives+=[Message] ("," receives+=[Message])*
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'receives'
		public Keyword getReceivesKeyword_5_1_0() { return cReceivesKeyword_5_1_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_5_1_1() { return cReceivesAssignment_5_1_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_5_1_1_0() { return cReceivesMessageCrossReference_5_1_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_5_1_1_0_1() { return cReceivesMessageIDTerminalRuleCall_5_1_1_0_1; }
		
		//("," receives+=[Message])*
		public Group getGroup_5_1_2() { return cGroup_5_1_2; }
		
		//","
		public Keyword getCommaKeyword_5_1_2_0() { return cCommaKeyword_5_1_2_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_5_1_2_1() { return cReceivesAssignment_5_1_2_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_5_1_2_1_0() { return cReceivesMessageCrossReference_5_1_2_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1() { return cReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class InternalPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.InternalPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInternalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cSendsKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cSendsAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_5_0_1_0 = (CrossReference)cSendsAssignment_5_0_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_5_0_1_0_1 = (RuleCall)cSendsMessageCrossReference_5_0_1_0.eContents().get(1);
		private final Group cGroup_5_0_2 = (Group)cGroup_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_5_0_2_0 = (Keyword)cGroup_5_0_2.eContents().get(0);
		private final Assignment cSendsAssignment_5_0_2_1 = (Assignment)cGroup_5_0_2.eContents().get(1);
		private final CrossReference cSendsMessageCrossReference_5_0_2_1_0 = (CrossReference)cSendsAssignment_5_0_2_1.eContents().get(0);
		private final RuleCall cSendsMessageIDTerminalRuleCall_5_0_2_1_0_1 = (RuleCall)cSendsMessageCrossReference_5_0_2_1_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cReceivesKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cReceivesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_5_1_1_0 = (CrossReference)cReceivesAssignment_5_1_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cReceivesMessageCrossReference_5_1_1_0.eContents().get(1);
		private final Group cGroup_5_1_2 = (Group)cGroup_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_5_1_2_0 = (Keyword)cGroup_5_1_2.eContents().get(0);
		private final Assignment cReceivesAssignment_5_1_2_1 = (Assignment)cGroup_5_1_2.eContents().get(1);
		private final CrossReference cReceivesMessageCrossReference_5_1_2_1_0 = (CrossReference)cReceivesAssignment_5_1_2_1.eContents().get(0);
		private final RuleCall cReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1 = (RuleCall)cReceivesMessageCrossReference_5_1_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//InternalPort:
		//	'internal' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
		//	'receives' receives+=[Message] ("," receives+=[Message])*)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'internal' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
		//'receives' receives+=[Message] ("," receives+=[Message])*)* '}'
		public Group getGroup() { return cGroup; }
		
		//'internal'
		public Keyword getInternalKeyword_0() { return cInternalKeyword_0; }
		
		//'port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_3_0() { return cAnnotationsPlatformAnnotationParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('sends' sends+=[Message] ("," sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//'sends' sends+=[Message] ("," sends+=[Message])*
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'sends'
		public Keyword getSendsKeyword_5_0_0() { return cSendsKeyword_5_0_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_5_0_1() { return cSendsAssignment_5_0_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_5_0_1_0() { return cSendsMessageCrossReference_5_0_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_5_0_1_0_1() { return cSendsMessageIDTerminalRuleCall_5_0_1_0_1; }
		
		//("," sends+=[Message])*
		public Group getGroup_5_0_2() { return cGroup_5_0_2; }
		
		//","
		public Keyword getCommaKeyword_5_0_2_0() { return cCommaKeyword_5_0_2_0; }
		
		//sends+=[Message]
		public Assignment getSendsAssignment_5_0_2_1() { return cSendsAssignment_5_0_2_1; }
		
		//[Message]
		public CrossReference getSendsMessageCrossReference_5_0_2_1_0() { return cSendsMessageCrossReference_5_0_2_1_0; }
		
		//ID
		public RuleCall getSendsMessageIDTerminalRuleCall_5_0_2_1_0_1() { return cSendsMessageIDTerminalRuleCall_5_0_2_1_0_1; }
		
		//'receives' receives+=[Message] ("," receives+=[Message])*
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'receives'
		public Keyword getReceivesKeyword_5_1_0() { return cReceivesKeyword_5_1_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_5_1_1() { return cReceivesAssignment_5_1_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_5_1_1_0() { return cReceivesMessageCrossReference_5_1_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_5_1_1_0_1() { return cReceivesMessageIDTerminalRuleCall_5_1_1_0_1; }
		
		//("," receives+=[Message])*
		public Group getGroup_5_1_2() { return cGroup_5_1_2; }
		
		//","
		public Keyword getCommaKeyword_5_1_2_0() { return cCommaKeyword_5_1_2_0; }
		
		//receives+=[Message]
		public Assignment getReceivesAssignment_5_1_2_1() { return cReceivesAssignment_5_1_2_1; }
		
		//[Message]
		public CrossReference getReceivesMessageCrossReference_5_1_2_1_0() { return cReceivesMessageCrossReference_5_1_2_1_0; }
		
		//ID
		public RuleCall getReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1() { return cReceivesMessageIDTerminalRuleCall_5_1_2_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class StreamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Stream");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStreamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputSourceParserRuleCall_4_0 = (RuleCall)cInputAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSelectKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSelectionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSelectionLocalVariableParserRuleCall_5_1_0 = (RuleCall)cSelectionAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSelectionAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cSelectionLocalVariableParserRuleCall_5_2_1_0 = (RuleCall)cSelectionAssignment_5_2_1.eContents().get(0);
		private final Keyword cProduceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOutputAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOutputSendActionParserRuleCall_7_0 = (RuleCall)cOutputAssignment_7.eContents().get(0);
		
		/// *****************************************************************************
		// *       CEP STREAMS                                                         *
		// ***************************************************************************** / Stream:
		//	'stream' name=ID annotations+=PlatformAnnotation* 'from' input=Source ('select' selection+=LocalVariable (","
		//	selection+=LocalVariable)*)?
		//	'produce' output=SendAction;
		@Override public ParserRule getRule() { return rule; }
		
		//'stream' name=ID annotations+=PlatformAnnotation* 'from' input=Source ('select' selection+=LocalVariable (","
		//selection+=LocalVariable)*)? 'produce' output=SendAction
		public Group getGroup() { return cGroup; }
		
		//'stream'
		public Keyword getStreamKeyword_0() { return cStreamKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//input=Source
		public Assignment getInputAssignment_4() { return cInputAssignment_4; }
		
		//Source
		public RuleCall getInputSourceParserRuleCall_4_0() { return cInputSourceParserRuleCall_4_0; }
		
		//('select' selection+=LocalVariable ("," selection+=LocalVariable)*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'select'
		public Keyword getSelectKeyword_5_0() { return cSelectKeyword_5_0; }
		
		//selection+=LocalVariable
		public Assignment getSelectionAssignment_5_1() { return cSelectionAssignment_5_1; }
		
		//LocalVariable
		public RuleCall getSelectionLocalVariableParserRuleCall_5_1_0() { return cSelectionLocalVariableParserRuleCall_5_1_0; }
		
		//("," selection+=LocalVariable)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//selection+=LocalVariable
		public Assignment getSelectionAssignment_5_2_1() { return cSelectionAssignment_5_2_1; }
		
		//LocalVariable
		public RuleCall getSelectionLocalVariableParserRuleCall_5_2_1_0() { return cSelectionLocalVariableParserRuleCall_5_2_1_0; }
		
		//'produce'
		public Keyword getProduceKeyword_6() { return cProduceKeyword_6; }
		
		//output=SendAction
		public Assignment getOutputAssignment_7() { return cOutputAssignment_7; }
		
		//SendAction
		public RuleCall getOutputSendActionParserRuleCall_7_0() { return cOutputSendActionParserRuleCall_7_0; }
	}
	public class SourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Source");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJoinSourcesParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMergeSourcesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSimpleSourceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Source:
		//	JoinSources | MergeSources | SimpleSource;
		@Override public ParserRule getRule() { return rule; }
		
		//JoinSources | MergeSources | SimpleSource
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JoinSources
		public RuleCall getJoinSourcesParserRuleCall_0() { return cJoinSourcesParserRuleCall_0; }
		
		//MergeSources
		public RuleCall getMergeSourcesParserRuleCall_1() { return cMergeSourcesParserRuleCall_1; }
		
		//SimpleSource
		public RuleCall getSimpleSourceParserRuleCall_2() { return cSimpleSourceParserRuleCall_2; }
	}
	public class ViewSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ViewSource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFilterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLengthWindowParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTimeWindowParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ViewSource:
		//	Filter | LengthWindow | TimeWindow;
		@Override public ParserRule getRule() { return rule; }
		
		//Filter | LengthWindow | TimeWindow
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Filter
		public RuleCall getFilterParserRuleCall_0() { return cFilterParserRuleCall_0; }
		
		//LengthWindow
		public RuleCall getLengthWindowParserRuleCall_1() { return cLengthWindowParserRuleCall_1; }
		
		//TimeWindow
		public RuleCall getTimeWindowParserRuleCall_2() { return cTimeWindowParserRuleCall_2; }
	}
	public class ReferencedElmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ReferencedElmt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParameterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPropertyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReceiveMessageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLocalVariableParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cJoinSourcesParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMergeSourcesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSimpleSourceParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cMessageParameterParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//ReferencedElmt:
		//	Message | Parameter | Property | ReceiveMessage | LocalVariable | JoinSources | MergeSources | SimpleSource |
		//	MessageParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//Message | Parameter | Property | ReceiveMessage | LocalVariable | JoinSources | MergeSources | SimpleSource |
		//MessageParameter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Message
		public RuleCall getMessageParserRuleCall_0() { return cMessageParserRuleCall_0; }
		
		//Parameter
		public RuleCall getParameterParserRuleCall_1() { return cParameterParserRuleCall_1; }
		
		//Property
		public RuleCall getPropertyParserRuleCall_2() { return cPropertyParserRuleCall_2; }
		
		//ReceiveMessage
		public RuleCall getReceiveMessageParserRuleCall_3() { return cReceiveMessageParserRuleCall_3; }
		
		//LocalVariable
		public RuleCall getLocalVariableParserRuleCall_4() { return cLocalVariableParserRuleCall_4; }
		
		//JoinSources
		public RuleCall getJoinSourcesParserRuleCall_5() { return cJoinSourcesParserRuleCall_5; }
		
		//MergeSources
		public RuleCall getMergeSourcesParserRuleCall_6() { return cMergeSourcesParserRuleCall_6; }
		
		//SimpleSource
		public RuleCall getSimpleSourceParserRuleCall_7() { return cSimpleSourceParserRuleCall_7; }
		
		//MessageParameter
		public RuleCall getMessageParameterParserRuleCall_8() { return cMessageParameterParserRuleCall_8; }
	}
	public class ElmtPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ElmtProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleParamRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArrayParamRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLengthArrayParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ElmtProperty:
		//	SimpleParamRef | ArrayParamRef | LengthArray;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleParamRef | ArrayParamRef | LengthArray
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleParamRef
		public RuleCall getSimpleParamRefParserRuleCall_0() { return cSimpleParamRefParserRuleCall_0; }
		
		//ArrayParamRef
		public RuleCall getArrayParamRefParserRuleCall_1() { return cArrayParamRefParserRuleCall_1; }
		
		//LengthArray
		public RuleCall getLengthArrayParserRuleCall_2() { return cLengthArrayParserRuleCall_2; }
	}
	public class JoinSourcesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.JoinSources");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourcesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourcesSourceParserRuleCall_4_0 = (RuleCall)cSourcesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAmpersandKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSourcesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSourcesSourceParserRuleCall_5_1_0 = (RuleCall)cSourcesAssignment_5_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cResultMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cResultMessageMessageCrossReference_7_0 = (CrossReference)cResultMessageAssignment_7.eContents().get(0);
		private final RuleCall cResultMessageMessageIDTerminalRuleCall_7_0_1 = (RuleCall)cResultMessageMessageCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRulesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRulesExpressionParserRuleCall_9_0 = (RuleCall)cRulesAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cRulesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cRulesExpressionParserRuleCall_10_1_0 = (RuleCall)cRulesAssignment_10_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cColonColonKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cOperatorsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cOperatorsViewSourceParserRuleCall_13_1_0 = (RuleCall)cOperatorsAssignment_13_1.eContents().get(0);
		
		//JoinSources:
		//	'join' name=ID ':' '[' sources+=Source ("&" sources+=Source)* '->' resultMessage=[Message] '(' rules+=Expression (","
		//	rules+=Expression)* ')' ']' ('::' operators+=ViewSource)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'join' name=ID ':' '[' sources+=Source ("&" sources+=Source)* '->' resultMessage=[Message] '(' rules+=Expression (","
		//rules+=Expression)* ')' ']' ('::' operators+=ViewSource)*
		public Group getGroup() { return cGroup; }
		
		//'join'
		public Keyword getJoinKeyword_0() { return cJoinKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//sources+=Source
		public Assignment getSourcesAssignment_4() { return cSourcesAssignment_4; }
		
		//Source
		public RuleCall getSourcesSourceParserRuleCall_4_0() { return cSourcesSourceParserRuleCall_4_0; }
		
		//("&" sources+=Source)*
		public Group getGroup_5() { return cGroup_5; }
		
		//"&"
		public Keyword getAmpersandKeyword_5_0() { return cAmpersandKeyword_5_0; }
		
		//sources+=Source
		public Assignment getSourcesAssignment_5_1() { return cSourcesAssignment_5_1; }
		
		//Source
		public RuleCall getSourcesSourceParserRuleCall_5_1_0() { return cSourcesSourceParserRuleCall_5_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }
		
		//resultMessage=[Message]
		public Assignment getResultMessageAssignment_7() { return cResultMessageAssignment_7; }
		
		//[Message]
		public CrossReference getResultMessageMessageCrossReference_7_0() { return cResultMessageMessageCrossReference_7_0; }
		
		//ID
		public RuleCall getResultMessageMessageIDTerminalRuleCall_7_0_1() { return cResultMessageMessageIDTerminalRuleCall_7_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }
		
		//rules+=Expression
		public Assignment getRulesAssignment_9() { return cRulesAssignment_9; }
		
		//Expression
		public RuleCall getRulesExpressionParserRuleCall_9_0() { return cRulesExpressionParserRuleCall_9_0; }
		
		//("," rules+=Expression)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//rules+=Expression
		public Assignment getRulesAssignment_10_1() { return cRulesAssignment_10_1; }
		
		//Expression
		public RuleCall getRulesExpressionParserRuleCall_10_1_0() { return cRulesExpressionParserRuleCall_10_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12() { return cRightSquareBracketKeyword_12; }
		
		//('::' operators+=ViewSource)*
		public Group getGroup_13() { return cGroup_13; }
		
		//'::'
		public Keyword getColonColonKeyword_13_0() { return cColonColonKeyword_13_0; }
		
		//operators+=ViewSource
		public Assignment getOperatorsAssignment_13_1() { return cOperatorsAssignment_13_1; }
		
		//ViewSource
		public RuleCall getOperatorsViewSourceParserRuleCall_13_1_0() { return cOperatorsViewSourceParserRuleCall_13_1_0; }
	}
	public class MergeSourcesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.MergeSources");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMergeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourcesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourcesSourceParserRuleCall_4_0 = (RuleCall)cSourcesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVerticalLineKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSourcesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSourcesSourceParserRuleCall_5_1_0 = (RuleCall)cSourcesAssignment_5_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cResultMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cResultMessageMessageCrossReference_7_0 = (CrossReference)cResultMessageAssignment_7.eContents().get(0);
		private final RuleCall cResultMessageMessageIDTerminalRuleCall_7_0_1 = (RuleCall)cResultMessageMessageCrossReference_7_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cColonColonKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cOperatorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cOperatorsViewSourceParserRuleCall_9_1_0 = (RuleCall)cOperatorsAssignment_9_1.eContents().get(0);
		
		//MergeSources:
		//	'merge' name=ID ':' '[' sources+=Source ("|" sources+=Source)* '->' resultMessage=[Message] ']' ('::'
		//	operators+=ViewSource)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'merge' name=ID ':' '[' sources+=Source ("|" sources+=Source)* '->' resultMessage=[Message] ']' ('::'
		//operators+=ViewSource)*
		public Group getGroup() { return cGroup; }
		
		//'merge'
		public Keyword getMergeKeyword_0() { return cMergeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//sources+=Source
		public Assignment getSourcesAssignment_4() { return cSourcesAssignment_4; }
		
		//Source
		public RuleCall getSourcesSourceParserRuleCall_4_0() { return cSourcesSourceParserRuleCall_4_0; }
		
		//("|" sources+=Source)*
		public Group getGroup_5() { return cGroup_5; }
		
		//"|"
		public Keyword getVerticalLineKeyword_5_0() { return cVerticalLineKeyword_5_0; }
		
		//sources+=Source
		public Assignment getSourcesAssignment_5_1() { return cSourcesAssignment_5_1; }
		
		//Source
		public RuleCall getSourcesSourceParserRuleCall_5_1_0() { return cSourcesSourceParserRuleCall_5_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }
		
		//resultMessage=[Message]
		public Assignment getResultMessageAssignment_7() { return cResultMessageAssignment_7; }
		
		//[Message]
		public CrossReference getResultMessageMessageCrossReference_7_0() { return cResultMessageMessageCrossReference_7_0; }
		
		//ID
		public RuleCall getResultMessageMessageIDTerminalRuleCall_7_0_1() { return cResultMessageMessageIDTerminalRuleCall_7_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
		
		//('::' operators+=ViewSource)*
		public Group getGroup_9() { return cGroup_9; }
		
		//'::'
		public Keyword getColonColonKeyword_9_0() { return cColonColonKeyword_9_0; }
		
		//operators+=ViewSource
		public Assignment getOperatorsAssignment_9_1() { return cOperatorsAssignment_9_1; }
		
		//ViewSource
		public RuleCall getOperatorsViewSourceParserRuleCall_9_1_0() { return cOperatorsViewSourceParserRuleCall_9_1_0; }
	}
	public class SimpleSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.SimpleSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMessageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMessageReceiveMessageParserRuleCall_2_0 = (RuleCall)cMessageAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOperatorsViewSourceParserRuleCall_3_1_0 = (RuleCall)cOperatorsAssignment_3_1.eContents().get(0);
		
		//SimpleSource:
		//	name=ID ':' message=ReceiveMessage ('::' operators+=ViewSource)*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' message=ReceiveMessage ('::' operators+=ViewSource)*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//message=ReceiveMessage
		public Assignment getMessageAssignment_2() { return cMessageAssignment_2; }
		
		//ReceiveMessage
		public RuleCall getMessageReceiveMessageParserRuleCall_2_0() { return cMessageReceiveMessageParserRuleCall_2_0; }
		
		//('::' operators+=ViewSource)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0() { return cColonColonKeyword_3_0; }
		
		//operators+=ViewSource
		public Assignment getOperatorsAssignment_3_1() { return cOperatorsAssignment_3_1; }
		
		//ViewSource
		public RuleCall getOperatorsViewSourceParserRuleCall_3_1_0() { return cOperatorsViewSourceParserRuleCall_3_1_0; }
	}
	public class FilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Filter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKeepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGuardAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGuardExpressionParserRuleCall_2_0 = (RuleCall)cGuardAssignment_2.eContents().get(0);
		
		//Filter:
		//	'keep' 'if' guard=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'keep' 'if' guard=Expression
		public Group getGroup() { return cGroup; }
		
		//'keep'
		public Keyword getKeepKeyword_0() { return cKeepKeyword_0; }
		
		//'if'
		public Keyword getIfKeyword_1() { return cIfKeyword_1; }
		
		//guard=Expression
		public Assignment getGuardAssignment_2() { return cGuardAssignment_2; }
		
		//Expression
		public RuleCall getGuardExpressionParserRuleCall_2_0() { return cGuardExpressionParserRuleCall_2_0; }
	}
	public class LengthWindowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.LengthWindow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBufferKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSizeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSizeExpressionParserRuleCall_1_0 = (RuleCall)cSizeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cByKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStepAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStepExpressionParserRuleCall_2_1_0 = (RuleCall)cStepAssignment_2_1.eContents().get(0);
		
		//LengthWindow:
		//	'buffer' size=Expression ('by' step=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'buffer' size=Expression ('by' step=Expression)?
		public Group getGroup() { return cGroup; }
		
		//'buffer'
		public Keyword getBufferKeyword_0() { return cBufferKeyword_0; }
		
		//size=Expression
		public Assignment getSizeAssignment_1() { return cSizeAssignment_1; }
		
		//Expression
		public RuleCall getSizeExpressionParserRuleCall_1_0() { return cSizeExpressionParserRuleCall_1_0; }
		
		//('by' step=Expression)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'by'
		public Keyword getByKeyword_2_0() { return cByKeyword_2_0; }
		
		//step=Expression
		public Assignment getStepAssignment_2_1() { return cStepAssignment_2_1; }
		
		//Expression
		public RuleCall getStepExpressionParserRuleCall_2_1_0() { return cStepExpressionParserRuleCall_2_1_0; }
	}
	public class TimeWindowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.TimeWindow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDuringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDurationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDurationExpressionParserRuleCall_1_0 = (RuleCall)cDurationAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cByKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStepAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStepExpressionParserRuleCall_2_1_0 = (RuleCall)cStepAssignment_2_1.eContents().get(0);
		
		//TimeWindow:
		//	'during' duration=Expression ('by' step=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'during' duration=Expression ('by' step=Expression)?
		public Group getGroup() { return cGroup; }
		
		//'during'
		public Keyword getDuringKeyword_0() { return cDuringKeyword_0; }
		
		//duration=Expression
		public Assignment getDurationAssignment_1() { return cDurationAssignment_1; }
		
		//Expression
		public RuleCall getDurationExpressionParserRuleCall_1_0() { return cDurationExpressionParserRuleCall_1_0; }
		
		//('by' step=Expression)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'by'
		public Keyword getByKeyword_2_0() { return cByKeyword_2_0; }
		
		//step=Expression
		public Assignment getStepAssignment_2_1() { return cStepAssignment_2_1; }
		
		//Expression
		public RuleCall getStepExpressionParserRuleCall_2_1_0() { return cStepExpressionParserRuleCall_2_1_0; }
	}
	public class MessageParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.MessageParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgRefMessageCrossReference_2_0 = (CrossReference)cMsgRefAssignment_2.eContents().get(0);
		private final RuleCall cMsgRefMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgRefMessageCrossReference_2_0.eContents().get(1);
		
		//MessageParameter:
		//	name=ID ':' msgRef=[Message];
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' msgRef=[Message]
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//msgRef=[Message]
		public Assignment getMsgRefAssignment_2() { return cMsgRefAssignment_2; }
		
		//[Message]
		public CrossReference getMsgRefMessageCrossReference_2_0() { return cMsgRefMessageCrossReference_2_0; }
		
		//ID
		public RuleCall getMsgRefMessageIDTerminalRuleCall_2_0_1() { return cMsgRefMessageIDTerminalRuleCall_2_0_1; }
	}
	public class SimpleParamRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.SimpleParamRef");
		private final Assignment cParameterRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cParameterRefParameterCrossReference_0 = (CrossReference)cParameterRefAssignment.eContents().get(0);
		private final RuleCall cParameterRefParameterIDTerminalRuleCall_0_1 = (RuleCall)cParameterRefParameterCrossReference_0.eContents().get(1);
		
		//SimpleParamRef:
		//	parameterRef=[Parameter];
		@Override public ParserRule getRule() { return rule; }
		
		//parameterRef=[Parameter]
		public Assignment getParameterRefAssignment() { return cParameterRefAssignment; }
		
		//[Parameter]
		public CrossReference getParameterRefParameterCrossReference_0() { return cParameterRefParameterCrossReference_0; }
		
		//ID
		public RuleCall getParameterRefParameterIDTerminalRuleCall_0_1() { return cParameterRefParameterIDTerminalRuleCall_0_1; }
	}
	public class ArrayParamRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ArrayParamRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cParameterRefParameterCrossReference_0_0 = (CrossReference)cParameterRefAssignment_0.eContents().get(0);
		private final RuleCall cParameterRefParameterIDTerminalRuleCall_0_0_1 = (RuleCall)cParameterRefParameterCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ArrayParamRef:
		//	parameterRef=[Parameter] '[' ']';
		@Override public ParserRule getRule() { return rule; }
		
		//parameterRef=[Parameter] '[' ']'
		public Group getGroup() { return cGroup; }
		
		//parameterRef=[Parameter]
		public Assignment getParameterRefAssignment_0() { return cParameterRefAssignment_0; }
		
		//[Parameter]
		public CrossReference getParameterRefParameterCrossReference_0_0() { return cParameterRefParameterCrossReference_0_0; }
		
		//ID
		public RuleCall getParameterRefParameterIDTerminalRuleCall_0_0_1() { return cParameterRefParameterIDTerminalRuleCall_0_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}
	public class LengthArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.LengthArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLengthArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLengthKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LengthArray:
		//	{LengthArray}
		//	'length';
		@Override public ParserRule getRule() { return rule; }
		
		//{LengthArray} 'length'
		public Group getGroup() { return cGroup; }
		
		//{LengthArray}
		public Action getLengthArrayAction_0() { return cLengthArrayAction_0; }
		
		//'length'
		public Keyword getLengthKeyword_1() { return cLengthKeyword_1; }
	}
	public class StateMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.StateMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatechartKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInitialAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInitialStateCrossReference_3_0 = (CrossReference)cInitialAssignment_3.eContents().get(0);
		private final RuleCall cInitialStateIDTerminalRuleCall_3_0_1 = (RuleCall)cInitialStateCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cKeepsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cHistoryAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cHistoryHistoryKeyword_4_1_0 = (Keyword)cHistoryAssignment_4_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOnKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEntryKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cEntryAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cEntryActionParserRuleCall_7_2_0 = (RuleCall)cEntryAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cOnKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cExitKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cExitAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cExitActionParserRuleCall_8_2_0 = (RuleCall)cExitAssignment_8_2.eContents().get(0);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Assignment cPropertiesAssignment_9_0 = (Assignment)cAlternatives_9.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_9_0_0 = (RuleCall)cPropertiesAssignment_9_0.eContents().get(0);
		private final Assignment cSubstateAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final RuleCall cSubstateStateParserRuleCall_9_1_0 = (RuleCall)cSubstateAssignment_9_1.eContents().get(0);
		private final Assignment cInternalAssignment_9_2 = (Assignment)cAlternatives_9.eContents().get(2);
		private final RuleCall cInternalInternalTransitionParserRuleCall_9_2_0 = (RuleCall)cInternalAssignment_9_2.eContents().get(0);
		private final Assignment cRegionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRegionParallelRegionParserRuleCall_10_0 = (RuleCall)cRegionAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		/// *****************************************************************************
		// *       STATE MECHINES                                                      *
		// ***************************************************************************** / StateMachine:
		//	'statechart' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{' ('on'
		//	'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
		//	internal+=InternalTransition)*
		//	region+=ParallelRegion*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'statechart' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{' ('on'
		//'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
		//internal+=InternalTransition)* region+=ParallelRegion* '}'
		public Group getGroup() { return cGroup; }
		
		//'statechart'
		public Keyword getStatechartKeyword_0() { return cStatechartKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'init'
		public Keyword getInitKeyword_2() { return cInitKeyword_2; }
		
		//initial=[State]
		public Assignment getInitialAssignment_3() { return cInitialAssignment_3; }
		
		//[State]
		public CrossReference getInitialStateCrossReference_3_0() { return cInitialStateCrossReference_3_0; }
		
		//ID
		public RuleCall getInitialStateIDTerminalRuleCall_3_0_1() { return cInitialStateIDTerminalRuleCall_3_0_1; }
		
		//('keeps' history?='history')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'keeps'
		public Keyword getKeepsKeyword_4_0() { return cKeepsKeyword_4_0; }
		
		//history?='history'
		public Assignment getHistoryAssignment_4_1() { return cHistoryAssignment_4_1; }
		
		//'history'
		public Keyword getHistoryHistoryKeyword_4_1_0() { return cHistoryHistoryKeyword_4_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//('on' 'entry' entry=Action)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'on'
		public Keyword getOnKeyword_7_0() { return cOnKeyword_7_0; }
		
		//'entry'
		public Keyword getEntryKeyword_7_1() { return cEntryKeyword_7_1; }
		
		//entry=Action
		public Assignment getEntryAssignment_7_2() { return cEntryAssignment_7_2; }
		
		//Action
		public RuleCall getEntryActionParserRuleCall_7_2_0() { return cEntryActionParserRuleCall_7_2_0; }
		
		//('on' 'exit' exit=Action)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'on'
		public Keyword getOnKeyword_8_0() { return cOnKeyword_8_0; }
		
		//'exit'
		public Keyword getExitKeyword_8_1() { return cExitKeyword_8_1; }
		
		//exit=Action
		public Assignment getExitAssignment_8_2() { return cExitAssignment_8_2; }
		
		//Action
		public RuleCall getExitActionParserRuleCall_8_2_0() { return cExitActionParserRuleCall_8_2_0; }
		
		//(properties+=Property | substate+=State | internal+=InternalTransition)*
		public Alternatives getAlternatives_9() { return cAlternatives_9; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_9_0() { return cPropertiesAssignment_9_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_9_0_0() { return cPropertiesPropertyParserRuleCall_9_0_0; }
		
		//substate+=State
		public Assignment getSubstateAssignment_9_1() { return cSubstateAssignment_9_1; }
		
		//State
		public RuleCall getSubstateStateParserRuleCall_9_1_0() { return cSubstateStateParserRuleCall_9_1_0; }
		
		//internal+=InternalTransition
		public Assignment getInternalAssignment_9_2() { return cInternalAssignment_9_2; }
		
		//InternalTransition
		public RuleCall getInternalInternalTransitionParserRuleCall_9_2_0() { return cInternalInternalTransitionParserRuleCall_9_2_0; }
		
		//region+=ParallelRegion*
		public Assignment getRegionAssignment_10() { return cRegionAssignment_10; }
		
		//ParallelRegion
		public RuleCall getRegionParallelRegionParserRuleCall_10_0() { return cRegionParallelRegionParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.State");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cState_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStateMachineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFinalStateParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCompositeState_ImplParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSessionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//State:
		//	State_Impl | StateMachine | FinalState | CompositeState_Impl | Session;
		@Override public ParserRule getRule() { return rule; }
		
		//State_Impl | StateMachine | FinalState | CompositeState_Impl | Session
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//State_Impl
		public RuleCall getState_ImplParserRuleCall_0() { return cState_ImplParserRuleCall_0; }
		
		//StateMachine
		public RuleCall getStateMachineParserRuleCall_1() { return cStateMachineParserRuleCall_1; }
		
		//FinalState
		public RuleCall getFinalStateParserRuleCall_2() { return cFinalStateParserRuleCall_2; }
		
		//CompositeState_Impl
		public RuleCall getCompositeState_ImplParserRuleCall_3() { return cCompositeState_ImplParserRuleCall_3; }
		
		//Session
		public RuleCall getSessionParserRuleCall_4() { return cSessionParserRuleCall_4; }
	}
	public class RegionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Region");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCompositeState_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParallelRegionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSessionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Region:
		//	CompositeState_Impl | ParallelRegion | Session;
		@Override public ParserRule getRule() { return rule; }
		
		//CompositeState_Impl | ParallelRegion | Session
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CompositeState_Impl
		public RuleCall getCompositeState_ImplParserRuleCall_0() { return cCompositeState_ImplParserRuleCall_0; }
		
		//ParallelRegion
		public RuleCall getParallelRegionParserRuleCall_1() { return cParallelRegionParserRuleCall_1; }
		
		//Session
		public RuleCall getSessionParserRuleCall_2() { return cSessionParserRuleCall_2; }
	}
	public class State_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.State_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOnKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEntryKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cEntryAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cEntryActionParserRuleCall_4_2_0 = (RuleCall)cEntryAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOnKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cExitKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cExitAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cExitActionParserRuleCall_5_2_0 = (RuleCall)cExitAssignment_5_2.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cPropertiesAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_6_0_0 = (RuleCall)cPropertiesAssignment_6_0.eContents().get(0);
		private final Assignment cInternalAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cInternalInternalTransitionParserRuleCall_6_1_0 = (RuleCall)cInternalAssignment_6_1.eContents().get(0);
		private final Assignment cOutgoingAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cOutgoingTransitionParserRuleCall_6_2_0 = (RuleCall)cOutgoingAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//State_Impl State:
		//	'state' name=ID annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)?
		//	(properties+=Property | internal+=InternalTransition | outgoing+=Transition)*
		//	'}'
		@Override public ParserRule getRule() { return rule; }
		
		//'state' name=ID annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)?
		//(properties+=Property | internal+=InternalTransition | outgoing+=Transition)* '}'
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('on' 'entry' entry=Action)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'on'
		public Keyword getOnKeyword_4_0() { return cOnKeyword_4_0; }
		
		//'entry'
		public Keyword getEntryKeyword_4_1() { return cEntryKeyword_4_1; }
		
		//entry=Action
		public Assignment getEntryAssignment_4_2() { return cEntryAssignment_4_2; }
		
		//Action
		public RuleCall getEntryActionParserRuleCall_4_2_0() { return cEntryActionParserRuleCall_4_2_0; }
		
		//('on' 'exit' exit=Action)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'on'
		public Keyword getOnKeyword_5_0() { return cOnKeyword_5_0; }
		
		//'exit'
		public Keyword getExitKeyword_5_1() { return cExitKeyword_5_1; }
		
		//exit=Action
		public Assignment getExitAssignment_5_2() { return cExitAssignment_5_2; }
		
		//Action
		public RuleCall getExitActionParserRuleCall_5_2_0() { return cExitActionParserRuleCall_5_2_0; }
		
		//(properties+=Property | internal+=InternalTransition | outgoing+=Transition)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_6_0() { return cPropertiesAssignment_6_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_6_0_0() { return cPropertiesPropertyParserRuleCall_6_0_0; }
		
		//internal+=InternalTransition
		public Assignment getInternalAssignment_6_1() { return cInternalAssignment_6_1; }
		
		//InternalTransition
		public RuleCall getInternalInternalTransitionParserRuleCall_6_1_0() { return cInternalInternalTransitionParserRuleCall_6_1_0; }
		
		//outgoing+=Transition
		public Assignment getOutgoingAssignment_6_2() { return cOutgoingAssignment_6_2; }
		
		//Transition
		public RuleCall getOutgoingTransitionParserRuleCall_6_2_0() { return cOutgoingTransitionParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FinalStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.FinalState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFinalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FinalState:
		//	'final' 'state' name=ID annotations+=PlatformAnnotation* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'final' 'state' name=ID annotations+=PlatformAnnotation* ';'
		public Group getGroup() { return cGroup; }
		
		//'final'
		public Keyword getFinalKeyword_0() { return cFinalKeyword_0; }
		
		//'state'
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_3_0() { return cAnnotationsPlatformAnnotationParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class CompositeState_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.CompositeState_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cInitKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInitialAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cInitialStateCrossReference_4_0 = (CrossReference)cInitialAssignment_4.eContents().get(0);
		private final RuleCall cInitialStateIDTerminalRuleCall_4_0_1 = (RuleCall)cInitialStateCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cKeepsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cHistoryAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cHistoryHistoryKeyword_5_1_0 = (Keyword)cHistoryAssignment_5_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cOnKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEntryKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cEntryAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cEntryActionParserRuleCall_8_2_0 = (RuleCall)cEntryAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOnKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cExitKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cExitAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cExitActionParserRuleCall_9_2_0 = (RuleCall)cExitAssignment_9_2.eContents().get(0);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Assignment cPropertiesAssignment_10_0 = (Assignment)cAlternatives_10.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_10_0_0 = (RuleCall)cPropertiesAssignment_10_0.eContents().get(0);
		private final Assignment cSubstateAssignment_10_1 = (Assignment)cAlternatives_10.eContents().get(1);
		private final RuleCall cSubstateStateParserRuleCall_10_1_0 = (RuleCall)cSubstateAssignment_10_1.eContents().get(0);
		private final Assignment cInternalAssignment_10_2 = (Assignment)cAlternatives_10.eContents().get(2);
		private final RuleCall cInternalInternalTransitionParserRuleCall_10_2_0 = (RuleCall)cInternalAssignment_10_2.eContents().get(0);
		private final Assignment cOutgoingAssignment_10_3 = (Assignment)cAlternatives_10.eContents().get(3);
		private final RuleCall cOutgoingTransitionParserRuleCall_10_3_0 = (RuleCall)cOutgoingAssignment_10_3.eContents().get(0);
		private final Assignment cRegionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRegionParallelRegionParserRuleCall_11_0 = (RuleCall)cRegionAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//CompositeState_Impl CompositeState:
		//	'composite' 'state' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation*
		//	'{' ('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
		//	internal+=InternalTransition | outgoing+=Transition)*
		//	region+=ParallelRegion*
		//	'}'
		@Override public ParserRule getRule() { return rule; }
		
		//'composite' 'state' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{'
		//('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
		//internal+=InternalTransition | outgoing+=Transition)* region+=ParallelRegion* '}'
		public Group getGroup() { return cGroup; }
		
		//'composite'
		public Keyword getCompositeKeyword_0() { return cCompositeKeyword_0; }
		
		//'state'
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }
		
		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'init'
		public Keyword getInitKeyword_3() { return cInitKeyword_3; }
		
		//initial=[State]
		public Assignment getInitialAssignment_4() { return cInitialAssignment_4; }
		
		//[State]
		public CrossReference getInitialStateCrossReference_4_0() { return cInitialStateCrossReference_4_0; }
		
		//ID
		public RuleCall getInitialStateIDTerminalRuleCall_4_0_1() { return cInitialStateIDTerminalRuleCall_4_0_1; }
		
		//('keeps' history?='history')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'keeps'
		public Keyword getKeepsKeyword_5_0() { return cKeepsKeyword_5_0; }
		
		//history?='history'
		public Assignment getHistoryAssignment_5_1() { return cHistoryAssignment_5_1; }
		
		//'history'
		public Keyword getHistoryHistoryKeyword_5_1_0() { return cHistoryHistoryKeyword_5_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_6_0() { return cAnnotationsPlatformAnnotationParserRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//('on' 'entry' entry=Action)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'on'
		public Keyword getOnKeyword_8_0() { return cOnKeyword_8_0; }
		
		//'entry'
		public Keyword getEntryKeyword_8_1() { return cEntryKeyword_8_1; }
		
		//entry=Action
		public Assignment getEntryAssignment_8_2() { return cEntryAssignment_8_2; }
		
		//Action
		public RuleCall getEntryActionParserRuleCall_8_2_0() { return cEntryActionParserRuleCall_8_2_0; }
		
		//('on' 'exit' exit=Action)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'on'
		public Keyword getOnKeyword_9_0() { return cOnKeyword_9_0; }
		
		//'exit'
		public Keyword getExitKeyword_9_1() { return cExitKeyword_9_1; }
		
		//exit=Action
		public Assignment getExitAssignment_9_2() { return cExitAssignment_9_2; }
		
		//Action
		public RuleCall getExitActionParserRuleCall_9_2_0() { return cExitActionParserRuleCall_9_2_0; }
		
		//(properties+=Property | substate+=State | internal+=InternalTransition | outgoing+=Transition)*
		public Alternatives getAlternatives_10() { return cAlternatives_10; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_10_0() { return cPropertiesAssignment_10_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_10_0_0() { return cPropertiesPropertyParserRuleCall_10_0_0; }
		
		//substate+=State
		public Assignment getSubstateAssignment_10_1() { return cSubstateAssignment_10_1; }
		
		//State
		public RuleCall getSubstateStateParserRuleCall_10_1_0() { return cSubstateStateParserRuleCall_10_1_0; }
		
		//internal+=InternalTransition
		public Assignment getInternalAssignment_10_2() { return cInternalAssignment_10_2; }
		
		//InternalTransition
		public RuleCall getInternalInternalTransitionParserRuleCall_10_2_0() { return cInternalInternalTransitionParserRuleCall_10_2_0; }
		
		//outgoing+=Transition
		public Assignment getOutgoingAssignment_10_3() { return cOutgoingAssignment_10_3; }
		
		//Transition
		public RuleCall getOutgoingTransitionParserRuleCall_10_3_0() { return cOutgoingTransitionParserRuleCall_10_3_0; }
		
		//region+=ParallelRegion*
		public Assignment getRegionAssignment_11() { return cRegionAssignment_11; }
		
		//ParallelRegion
		public RuleCall getRegionParallelRegionParserRuleCall_11_0() { return cRegionParallelRegionParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Session");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSessionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInitialAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInitialStateCrossReference_3_0 = (CrossReference)cInitialAssignment_3.eContents().get(0);
		private final RuleCall cInitialStateIDTerminalRuleCall_3_0_1 = (RuleCall)cInitialStateCrossReference_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOnKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEntryKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cEntryAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cEntryActionParserRuleCall_6_2_0 = (RuleCall)cEntryAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOnKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cExitKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cExitAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cExitActionParserRuleCall_7_2_0 = (RuleCall)cExitAssignment_7_2.eContents().get(0);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cPropertiesAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_8_0_0 = (RuleCall)cPropertiesAssignment_8_0.eContents().get(0);
		private final Assignment cSubstateAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cSubstateStateParserRuleCall_8_1_0 = (RuleCall)cSubstateAssignment_8_1.eContents().get(0);
		private final Assignment cInternalAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cInternalInternalTransitionParserRuleCall_8_2_0 = (RuleCall)cInternalAssignment_8_2.eContents().get(0);
		private final Assignment cRegionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRegionParallelRegionParserRuleCall_9_0 = (RuleCall)cRegionAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Session:
		//	'session' name=ID? 'init' initial=[State] annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on'
		//	'exit' exit=Action)? (properties+=Property | substate+=State | internal+=InternalTransition)*
		//	region+=ParallelRegion*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'session' name=ID? 'init' initial=[State] annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on' 'exit'
		//exit=Action)? (properties+=Property | substate+=State | internal+=InternalTransition)* region+=ParallelRegion* '}'
		public Group getGroup() { return cGroup; }
		
		//'session'
		public Keyword getSessionKeyword_0() { return cSessionKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'init'
		public Keyword getInitKeyword_2() { return cInitKeyword_2; }
		
		//initial=[State]
		public Assignment getInitialAssignment_3() { return cInitialAssignment_3; }
		
		//[State]
		public CrossReference getInitialStateCrossReference_3_0() { return cInitialStateCrossReference_3_0; }
		
		//ID
		public RuleCall getInitialStateIDTerminalRuleCall_3_0_1() { return cInitialStateIDTerminalRuleCall_3_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//('on' 'entry' entry=Action)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'on'
		public Keyword getOnKeyword_6_0() { return cOnKeyword_6_0; }
		
		//'entry'
		public Keyword getEntryKeyword_6_1() { return cEntryKeyword_6_1; }
		
		//entry=Action
		public Assignment getEntryAssignment_6_2() { return cEntryAssignment_6_2; }
		
		//Action
		public RuleCall getEntryActionParserRuleCall_6_2_0() { return cEntryActionParserRuleCall_6_2_0; }
		
		//('on' 'exit' exit=Action)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'on'
		public Keyword getOnKeyword_7_0() { return cOnKeyword_7_0; }
		
		//'exit'
		public Keyword getExitKeyword_7_1() { return cExitKeyword_7_1; }
		
		//exit=Action
		public Assignment getExitAssignment_7_2() { return cExitAssignment_7_2; }
		
		//Action
		public RuleCall getExitActionParserRuleCall_7_2_0() { return cExitActionParserRuleCall_7_2_0; }
		
		//(properties+=Property | substate+=State | internal+=InternalTransition)*
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_8_0() { return cPropertiesAssignment_8_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_8_0_0() { return cPropertiesPropertyParserRuleCall_8_0_0; }
		
		//substate+=State
		public Assignment getSubstateAssignment_8_1() { return cSubstateAssignment_8_1; }
		
		//State
		public RuleCall getSubstateStateParserRuleCall_8_1_0() { return cSubstateStateParserRuleCall_8_1_0; }
		
		//internal+=InternalTransition
		public Assignment getInternalAssignment_8_2() { return cInternalAssignment_8_2; }
		
		//InternalTransition
		public RuleCall getInternalInternalTransitionParserRuleCall_8_2_0() { return cInternalInternalTransitionParserRuleCall_8_2_0; }
		
		//region+=ParallelRegion*
		public Assignment getRegionAssignment_9() { return cRegionAssignment_9; }
		
		//ParallelRegion
		public RuleCall getRegionParallelRegionParserRuleCall_9_0() { return cRegionParallelRegionParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ParallelRegionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ParallelRegion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInitKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInitialAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInitialStateCrossReference_3_0 = (CrossReference)cInitialAssignment_3.eContents().get(0);
		private final RuleCall cInitialStateIDTerminalRuleCall_3_0_1 = (RuleCall)cInitialStateCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cKeepsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cHistoryAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cHistoryHistoryKeyword_4_1_0 = (Keyword)cHistoryAssignment_4_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSubstateAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSubstateStateParserRuleCall_7_0 = (RuleCall)cSubstateAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ParallelRegion:
		//	'region' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{'
		//	substate+=State*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'region' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{'
		//substate+=State* '}'
		public Group getGroup() { return cGroup; }
		
		//'region'
		public Keyword getRegionKeyword_0() { return cRegionKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'init'
		public Keyword getInitKeyword_2() { return cInitKeyword_2; }
		
		//initial=[State]
		public Assignment getInitialAssignment_3() { return cInitialAssignment_3; }
		
		//[State]
		public CrossReference getInitialStateCrossReference_3_0() { return cInitialStateCrossReference_3_0; }
		
		//ID
		public RuleCall getInitialStateIDTerminalRuleCall_3_0_1() { return cInitialStateIDTerminalRuleCall_3_0_1; }
		
		//('keeps' history?='history')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'keeps'
		public Keyword getKeepsKeyword_4_0() { return cKeepsKeyword_4_0; }
		
		//history?='history'
		public Assignment getHistoryAssignment_4_1() { return cHistoryAssignment_4_1; }
		
		//'history'
		public Keyword getHistoryHistoryKeyword_4_1_0() { return cHistoryHistoryKeyword_4_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//substate+=State*
		public Assignment getSubstateAssignment_7() { return cSubstateAssignment_7; }
		
		//State
		public RuleCall getSubstateStateParserRuleCall_7_0() { return cSubstateStateParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTargetStateCrossReference_3_0 = (CrossReference)cTargetAssignment_3.eContents().get(0);
		private final RuleCall cTargetStateIDTerminalRuleCall_3_0_1 = (RuleCall)cTargetStateCrossReference_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEventKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEventAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEventEventParserRuleCall_5_1_0 = (RuleCall)cEventAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGuardKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGuardAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGuardExpressionParserRuleCall_6_1_0 = (RuleCall)cGuardAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cActionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cActionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cActionActionParserRuleCall_7_1_0 = (RuleCall)cActionAssignment_7_1.eContents().get(0);
		
		//Transition:
		//	'transition' name=ID? '->' target=[State] annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard'
		//	guard=Expression)? ('action' action=Action)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'transition' name=ID? '->' target=[State] annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard'
		//guard=Expression)? ('action' action=Action)?
		public Group getGroup() { return cGroup; }
		
		//'transition'
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//target=[State]
		public Assignment getTargetAssignment_3() { return cTargetAssignment_3; }
		
		//[State]
		public CrossReference getTargetStateCrossReference_3_0() { return cTargetStateCrossReference_3_0; }
		
		//ID
		public RuleCall getTargetStateIDTerminalRuleCall_3_0_1() { return cTargetStateIDTerminalRuleCall_3_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
		
		//('event' event+=Event)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'event'
		public Keyword getEventKeyword_5_0() { return cEventKeyword_5_0; }
		
		//event+=Event
		public Assignment getEventAssignment_5_1() { return cEventAssignment_5_1; }
		
		//Event
		public RuleCall getEventEventParserRuleCall_5_1_0() { return cEventEventParserRuleCall_5_1_0; }
		
		//('guard' guard=Expression)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'guard'
		public Keyword getGuardKeyword_6_0() { return cGuardKeyword_6_0; }
		
		//guard=Expression
		public Assignment getGuardAssignment_6_1() { return cGuardAssignment_6_1; }
		
		//Expression
		public RuleCall getGuardExpressionParserRuleCall_6_1_0() { return cGuardExpressionParserRuleCall_6_1_0; }
		
		//('action' action=Action)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'action'
		public Keyword getActionKeyword_7_0() { return cActionKeyword_7_0; }
		
		//action=Action
		public Assignment getActionAssignment_7_1() { return cActionAssignment_7_1; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_7_1_0() { return cActionActionParserRuleCall_7_1_0; }
	}
	public class InternalTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.InternalTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEventKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEventAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEventEventParserRuleCall_4_1_0 = (RuleCall)cEventAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cGuardKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cGuardAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cGuardExpressionParserRuleCall_5_1_0 = (RuleCall)cGuardAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cActionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cActionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cActionActionParserRuleCall_6_1_0 = (RuleCall)cActionAssignment_6_1.eContents().get(0);
		
		//InternalTransition:
		//	{InternalTransition}
		//	'internal' name=ID?
		//	annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard' guard=Expression)? ('action' action=Action)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{InternalTransition} 'internal' name=ID? annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard'
		//guard=Expression)? ('action' action=Action)?
		public Group getGroup() { return cGroup; }
		
		//{InternalTransition}
		public Action getInternalTransitionAction_0() { return cInternalTransitionAction_0; }
		
		//'internal'
		public Keyword getInternalKeyword_1() { return cInternalKeyword_1; }
		
		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_3_0() { return cAnnotationsPlatformAnnotationParserRuleCall_3_0; }
		
		//('event' event+=Event)*
		public Group getGroup_4() { return cGroup_4; }
		
		//'event'
		public Keyword getEventKeyword_4_0() { return cEventKeyword_4_0; }
		
		//event+=Event
		public Assignment getEventAssignment_4_1() { return cEventAssignment_4_1; }
		
		//Event
		public RuleCall getEventEventParserRuleCall_4_1_0() { return cEventEventParserRuleCall_4_1_0; }
		
		//('guard' guard=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'guard'
		public Keyword getGuardKeyword_5_0() { return cGuardKeyword_5_0; }
		
		//guard=Expression
		public Assignment getGuardAssignment_5_1() { return cGuardAssignment_5_1; }
		
		//Expression
		public RuleCall getGuardExpressionParserRuleCall_5_1_0() { return cGuardExpressionParserRuleCall_5_1_0; }
		
		//('action' action=Action)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'action'
		public Keyword getActionKeyword_6_0() { return cActionKeyword_6_0; }
		
		//action=Action
		public Assignment getActionAssignment_6_1() { return cActionAssignment_6_1; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_6_1_0() { return cActionActionParserRuleCall_6_1_0; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Event");
		private final RuleCall cReceiveMessageParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Event:
		//	ReceiveMessage;
		@Override public ParserRule getRule() { return rule; }
		
		//ReceiveMessage
		public RuleCall getReceiveMessageParserRuleCall() { return cReceiveMessageParserRuleCall; }
	}
	public class ReceiveMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ReceiveMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPortAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPortPortCrossReference_0_0 = (CrossReference)cPortAssignment_0.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_0_0_1 = (RuleCall)cPortPortCrossReference_0_0.eContents().get(1);
		private final Keyword cQuestionMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMessageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMessageMessageCrossReference_2_0 = (CrossReference)cMessageAssignment_2.eContents().get(0);
		private final RuleCall cMessageMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMessageMessageCrossReference_2_0.eContents().get(1);
		
		//ReceiveMessage:
		//	port=[Port] '?' message=[Message];
		@Override public ParserRule getRule() { return rule; }
		
		//port=[Port] '?' message=[Message]
		public Group getGroup() { return cGroup; }
		
		//port=[Port]
		public Assignment getPortAssignment_0() { return cPortAssignment_0; }
		
		//[Port]
		public CrossReference getPortPortCrossReference_0_0() { return cPortPortCrossReference_0_0; }
		
		//ID
		public RuleCall getPortPortIDTerminalRuleCall_0_0_1() { return cPortPortIDTerminalRuleCall_0_0_1; }
		
		//'?'
		public Keyword getQuestionMarkKeyword_1() { return cQuestionMarkKeyword_1; }
		
		//message=[Message]
		public Assignment getMessageAssignment_2() { return cMessageAssignment_2; }
		
		//[Message]
		public CrossReference getMessageMessageCrossReference_2_0() { return cMessageMessageCrossReference_2_0; }
		
		//ID
		public RuleCall getMessageMessageIDTerminalRuleCall_2_0_1() { return cMessageMessageIDTerminalRuleCall_2_0_1; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionBlockParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternStatementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSendActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cVariableAssignmentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cIncrementParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDecrementParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cLoopActionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cConditionalActionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cReturnActionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPrintActionParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cErrorActionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cStartSessionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cFunctionCallStatementParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cLocalVariableParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		/// *****************************************************************************
		// *       ACTIONS                                                             *
		// ***************************************************************************** / Action:
		//	ActionBlock | ExternStatement | SendAction | VariableAssignment | Increment | Decrement | LoopAction |
		//	ConditionalAction | ReturnAction | PrintAction | ErrorAction | StartSession | FunctionCallStatement | LocalVariable;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionBlock | ExternStatement | SendAction | VariableAssignment | Increment | Decrement | LoopAction | ConditionalAction
		//| ReturnAction | PrintAction | ErrorAction | StartSession | FunctionCallStatement | LocalVariable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionBlock
		public RuleCall getActionBlockParserRuleCall_0() { return cActionBlockParserRuleCall_0; }
		
		//ExternStatement
		public RuleCall getExternStatementParserRuleCall_1() { return cExternStatementParserRuleCall_1; }
		
		//SendAction
		public RuleCall getSendActionParserRuleCall_2() { return cSendActionParserRuleCall_2; }
		
		//VariableAssignment
		public RuleCall getVariableAssignmentParserRuleCall_3() { return cVariableAssignmentParserRuleCall_3; }
		
		//Increment
		public RuleCall getIncrementParserRuleCall_4() { return cIncrementParserRuleCall_4; }
		
		//Decrement
		public RuleCall getDecrementParserRuleCall_5() { return cDecrementParserRuleCall_5; }
		
		//LoopAction
		public RuleCall getLoopActionParserRuleCall_6() { return cLoopActionParserRuleCall_6; }
		
		//ConditionalAction
		public RuleCall getConditionalActionParserRuleCall_7() { return cConditionalActionParserRuleCall_7; }
		
		//ReturnAction
		public RuleCall getReturnActionParserRuleCall_8() { return cReturnActionParserRuleCall_8; }
		
		//PrintAction
		public RuleCall getPrintActionParserRuleCall_9() { return cPrintActionParserRuleCall_9; }
		
		//ErrorAction
		public RuleCall getErrorActionParserRuleCall_10() { return cErrorActionParserRuleCall_10; }
		
		//StartSession
		public RuleCall getStartSessionParserRuleCall_11() { return cStartSessionParserRuleCall_11; }
		
		//FunctionCallStatement
		public RuleCall getFunctionCallStatementParserRuleCall_12() { return cFunctionCallStatementParserRuleCall_12; }
		
		//LocalVariable
		public RuleCall getLocalVariableParserRuleCall_13() { return cLocalVariableParserRuleCall_13; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Variable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLocalVariableParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Variable:
		//	Parameter | Property | LocalVariable;
		@Override public ParserRule getRule() { return rule; }
		
		//Parameter | Property | LocalVariable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Parameter
		public RuleCall getParameterParserRuleCall_0() { return cParameterParserRuleCall_0; }
		
		//Property
		public RuleCall getPropertyParserRuleCall_1() { return cPropertyParserRuleCall_1; }
		
		//LocalVariable
		public RuleCall getLocalVariableParserRuleCall_2() { return cLocalVariableParserRuleCall_2; }
	}
	public class ActionBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ActionBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_2_0 = (RuleCall)cActionsAssignment_2.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ActionBlock:
		//	{ActionBlock}
		//	'do' actions+=Action* 'end';
		@Override public ParserRule getRule() { return rule; }
		
		//{ActionBlock} 'do' actions+=Action* 'end'
		public Group getGroup() { return cGroup; }
		
		//{ActionBlock}
		public Action getActionBlockAction_0() { return cActionBlockAction_0; }
		
		//'do'
		public Keyword getDoKeyword_1() { return cDoKeyword_1; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_2_0() { return cActionsActionParserRuleCall_2_0; }
		
		//'end'
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}
	public class ExternStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ExternStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStatementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStatementSTRING_EXTTerminalRuleCall_0_0 = (RuleCall)cStatementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAmpersandKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSegmentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSegmentsExpressionParserRuleCall_1_1_0 = (RuleCall)cSegmentsAssignment_1_1.eContents().get(0);
		
		//ExternStatement:
		//	statement=STRING_EXT ('&' segments+=Expression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//statement=STRING_EXT ('&' segments+=Expression)*
		public Group getGroup() { return cGroup; }
		
		//statement=STRING_EXT
		public Assignment getStatementAssignment_0() { return cStatementAssignment_0; }
		
		//STRING_EXT
		public RuleCall getStatementSTRING_EXTTerminalRuleCall_0_0() { return cStatementSTRING_EXTTerminalRuleCall_0_0; }
		
		//('&' segments+=Expression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'&'
		public Keyword getAmpersandKeyword_1_0() { return cAmpersandKeyword_1_0; }
		
		//segments+=Expression
		public Assignment getSegmentsAssignment_1_1() { return cSegmentsAssignment_1_1; }
		
		//Expression
		public RuleCall getSegmentsExpressionParserRuleCall_1_1_0() { return cSegmentsExpressionParserRuleCall_1_1_0; }
	}
	public class LocalVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.LocalVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cChangeableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cChangeableReadonlyKeyword_0_0 = (Keyword)cChangeableAssignment_0.eContents().get(0);
		private final Keyword cVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeTypeCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeTypeCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInitAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInitExpressionParserRuleCall_5_1_0 = (RuleCall)cInitAssignment_5_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		
		//LocalVariable:
		//	^changeable?='readonly'? 'var' name=ID ':' type=[Type] ('=' init=Expression)? annotations+=PlatformAnnotation*
		//	//('isArray' isArray=EBoolean)?
		//	//('cardinality' cardinality=Expression)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//^changeable?='readonly'? 'var' name=ID ':' type=[Type] ('=' init=Expression)? annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//^changeable?='readonly'?
		public Assignment getChangeableAssignment_0() { return cChangeableAssignment_0; }
		
		//'readonly'
		public Keyword getChangeableReadonlyKeyword_0_0() { return cChangeableReadonlyKeyword_0_0; }
		
		//'var'
		public Keyword getVarKeyword_1() { return cVarKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//type=[Type]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_4_0() { return cTypeTypeCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_4_0_1() { return cTypeTypeIDTerminalRuleCall_4_0_1; }
		
		//('=' init=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//init=Expression
		public Assignment getInitAssignment_5_1() { return cInitAssignment_5_1; }
		
		//Expression
		public RuleCall getInitExpressionParserRuleCall_5_1_0() { return cInitExpressionParserRuleCall_5_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_6_0() { return cAnnotationsPlatformAnnotationParserRuleCall_6_0; }
	}
	public class SendActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.SendAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPortAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPortPortCrossReference_0_0 = (CrossReference)cPortAssignment_0.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_0_0_1 = (RuleCall)cPortPortCrossReference_0_0.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMessageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMessageMessageCrossReference_2_0 = (CrossReference)cMessageAssignment_2.eContents().get(0);
		private final RuleCall cMessageMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMessageMessageCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersExpressionParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParametersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParametersExpressionParserRuleCall_5_1_0 = (RuleCall)cParametersAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SendAction:
		//	port=[Port] '!' message=[Message] '(' parameters+=Expression ("," parameters+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//port=[Port] '!' message=[Message] '(' parameters+=Expression ("," parameters+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//port=[Port]
		public Assignment getPortAssignment_0() { return cPortAssignment_0; }
		
		//[Port]
		public CrossReference getPortPortCrossReference_0_0() { return cPortPortCrossReference_0_0; }
		
		//ID
		public RuleCall getPortPortIDTerminalRuleCall_0_0_1() { return cPortPortIDTerminalRuleCall_0_0_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_1() { return cExclamationMarkKeyword_1; }
		
		//message=[Message]
		public Assignment getMessageAssignment_2() { return cMessageAssignment_2; }
		
		//[Message]
		public CrossReference getMessageMessageCrossReference_2_0() { return cMessageMessageCrossReference_2_0; }
		
		//ID
		public RuleCall getMessageMessageIDTerminalRuleCall_2_0_1() { return cMessageMessageIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//parameters+=Expression
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }
		
		//Expression
		public RuleCall getParametersExpressionParserRuleCall_4_0() { return cParametersExpressionParserRuleCall_4_0; }
		
		//("," parameters+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//parameters+=Expression
		public Assignment getParametersAssignment_5_1() { return cParametersAssignment_5_1; }
		
		//Expression
		public RuleCall getParametersExpressionParserRuleCall_5_1_0() { return cParametersExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class VariableAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.VariableAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPropertyVariableCrossReference_0_0 = (CrossReference)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cPropertyVariableIDTerminalRuleCall_0_0_1 = (RuleCall)cPropertyVariableCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cIndexAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cIndexExpressionParserRuleCall_1_1_0 = (RuleCall)cIndexAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionExpressionParserRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		
		//VariableAssignment:
		//	property=[Variable] ('[' index+=Expression ']')* '=' expression=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//property=[Variable] ('[' index+=Expression ']')* '=' expression=Expression
		public Group getGroup() { return cGroup; }
		
		//property=[Variable]
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }
		
		//[Variable]
		public CrossReference getPropertyVariableCrossReference_0_0() { return cPropertyVariableCrossReference_0_0; }
		
		//ID
		public RuleCall getPropertyVariableIDTerminalRuleCall_0_0_1() { return cPropertyVariableIDTerminalRuleCall_0_0_1; }
		
		//('[' index+=Expression ']')*
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//index+=Expression
		public Assignment getIndexAssignment_1_1() { return cIndexAssignment_1_1; }
		
		//Expression
		public RuleCall getIndexExpressionParserRuleCall_1_1_0() { return cIndexExpressionParserRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_3_0() { return cExpressionExpressionParserRuleCall_3_0; }
	}
	public class IncrementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Increment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cVarVariableCrossReference_0_0 = (CrossReference)cVarAssignment_0.eContents().get(0);
		private final RuleCall cVarVariableIDTerminalRuleCall_0_0_1 = (RuleCall)cVarVariableCrossReference_0_0.eContents().get(1);
		private final Keyword cPlusSignPlusSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Increment:
		//	var=[Variable] '++';
		@Override public ParserRule getRule() { return rule; }
		
		//var=[Variable] '++'
		public Group getGroup() { return cGroup; }
		
		//var=[Variable]
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }
		
		//[Variable]
		public CrossReference getVarVariableCrossReference_0_0() { return cVarVariableCrossReference_0_0; }
		
		//ID
		public RuleCall getVarVariableIDTerminalRuleCall_0_0_1() { return cVarVariableIDTerminalRuleCall_0_0_1; }
		
		//'++'
		public Keyword getPlusSignPlusSignKeyword_1() { return cPlusSignPlusSignKeyword_1; }
	}
	public class DecrementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Decrement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cVarVariableCrossReference_0_0 = (CrossReference)cVarAssignment_0.eContents().get(0);
		private final RuleCall cVarVariableIDTerminalRuleCall_0_0_1 = (RuleCall)cVarVariableCrossReference_0_0.eContents().get(1);
		private final Keyword cHyphenMinusHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Decrement:
		//	var=[Variable] '--';
		@Override public ParserRule getRule() { return rule; }
		
		//var=[Variable] '--'
		public Group getGroup() { return cGroup; }
		
		//var=[Variable]
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }
		
		//[Variable]
		public CrossReference getVarVariableCrossReference_0_0() { return cVarVariableCrossReference_0_0; }
		
		//ID
		public RuleCall getVarVariableIDTerminalRuleCall_0_0_1() { return cVarVariableIDTerminalRuleCall_0_0_1; }
		
		//'--'
		public Keyword getHyphenMinusHyphenMinusKeyword_1() { return cHyphenMinusHyphenMinusKeyword_1; }
	}
	public class LoopActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.LoopAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionExpressionParserRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionActionParserRuleCall_4_0 = (RuleCall)cActionAssignment_4.eContents().get(0);
		
		//LoopAction:
		//	'while' '(' condition=Expression ')' action=Action;
		@Override public ParserRule getRule() { return rule; }
		
		//'while' '(' condition=Expression ')' action=Action
		public Group getGroup() { return cGroup; }
		
		//'while'
		public Keyword getWhileKeyword_0() { return cWhileKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//condition=Expression
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_2_0() { return cConditionExpressionParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//action=Action
		public Assignment getActionAssignment_4() { return cActionAssignment_4; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_4_0() { return cActionActionParserRuleCall_4_0; }
	}
	public class ConditionalActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ConditionalAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionExpressionParserRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionActionParserRuleCall_4_0 = (RuleCall)cActionAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cElseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cElseActionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cElseActionActionParserRuleCall_5_1_0 = (RuleCall)cElseActionAssignment_5_1.eContents().get(0);
		
		//ConditionalAction:
		//	'if' '(' condition=Expression ')' action=Action ('else' elseAction=Action)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' '(' condition=Expression ')' action=Action ('else' elseAction=Action)?
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//condition=Expression
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_2_0() { return cConditionExpressionParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//action=Action
		public Assignment getActionAssignment_4() { return cActionAssignment_4; }
		
		//Action
		public RuleCall getActionActionParserRuleCall_4_0() { return cActionActionParserRuleCall_4_0; }
		
		//('else' elseAction=Action)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'else'
		public Keyword getElseKeyword_5_0() { return cElseKeyword_5_0; }
		
		//elseAction=Action
		public Assignment getElseActionAssignment_5_1() { return cElseActionAssignment_5_1; }
		
		//Action
		public RuleCall getElseActionActionParserRuleCall_5_1_0() { return cElseActionActionParserRuleCall_5_1_0; }
	}
	public class ReturnActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ReturnAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpExpressionParserRuleCall_1_0 = (RuleCall)cExpAssignment_1.eContents().get(0);
		
		//ReturnAction:
		//	'return' exp=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'return' exp=Expression
		public Group getGroup() { return cGroup; }
		
		//'return'
		public Keyword getReturnKeyword_0() { return cReturnKeyword_0; }
		
		//exp=Expression
		public Assignment getExpAssignment_1() { return cExpAssignment_1; }
		
		//Expression
		public RuleCall getExpExpressionParserRuleCall_1_0() { return cExpExpressionParserRuleCall_1_0; }
	}
	public class PrintActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.PrintAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMsgAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMsgExpressionParserRuleCall_1_0 = (RuleCall)cMsgAssignment_1.eContents().get(0);
		
		//PrintAction:
		//	'print' msg=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'print' msg=Expression
		public Group getGroup() { return cGroup; }
		
		//'print'
		public Keyword getPrintKeyword_0() { return cPrintKeyword_0; }
		
		//msg=Expression
		public Assignment getMsgAssignment_1() { return cMsgAssignment_1; }
		
		//Expression
		public RuleCall getMsgExpressionParserRuleCall_1_0() { return cMsgExpressionParserRuleCall_1_0; }
	}
	public class ErrorActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ErrorAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cErrorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMsgAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMsgExpressionParserRuleCall_1_0 = (RuleCall)cMsgAssignment_1.eContents().get(0);
		
		//ErrorAction:
		//	'error' msg=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'error' msg=Expression
		public Group getGroup() { return cGroup; }
		
		//'error'
		public Keyword getErrorKeyword_0() { return cErrorKeyword_0; }
		
		//msg=Expression
		public Assignment getMsgAssignment_1() { return cMsgAssignment_1; }
		
		//Expression
		public RuleCall getMsgExpressionParserRuleCall_1_0() { return cMsgExpressionParserRuleCall_1_0; }
	}
	public class StartSessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.StartSession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpawnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSessionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSessionSessionCrossReference_1_0 = (CrossReference)cSessionAssignment_1.eContents().get(0);
		private final RuleCall cSessionSessionIDTerminalRuleCall_1_0_1 = (RuleCall)cSessionSessionCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConstructorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConstructorPropertyAssignParserRuleCall_3_0 = (RuleCall)cConstructorAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StartSession:
		//	'spawn' session=[Session] '{' constructor+=PropertyAssign* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'spawn' session=[Session] '{' constructor+=PropertyAssign* '}'
		public Group getGroup() { return cGroup; }
		
		//'spawn'
		public Keyword getSpawnKeyword_0() { return cSpawnKeyword_0; }
		
		//session=[Session]
		public Assignment getSessionAssignment_1() { return cSessionAssignment_1; }
		
		//[Session]
		public CrossReference getSessionSessionCrossReference_1_0() { return cSessionSessionCrossReference_1_0; }
		
		//ID
		public RuleCall getSessionSessionIDTerminalRuleCall_1_0_1() { return cSessionSessionIDTerminalRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//constructor+=PropertyAssign*
		public Assignment getConstructorAssignment_3() { return cConstructorAssignment_3; }
		
		//PropertyAssign
		public RuleCall getConstructorPropertyAssignParserRuleCall_3_0() { return cConstructorPropertyAssignParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FunctionCallStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.FunctionCallStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFunctionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFunctionFunctionCrossReference_0_0 = (CrossReference)cFunctionAssignment_0.eContents().get(0);
		private final RuleCall cFunctionFunctionIDTerminalRuleCall_0_0_1 = (RuleCall)cFunctionFunctionCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParametersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParametersExpressionParserRuleCall_2_0 = (RuleCall)cParametersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParametersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParametersExpressionParserRuleCall_3_1_0 = (RuleCall)cParametersAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FunctionCallStatement:
		//	function=[Function] '(' parameters+=Expression ("," parameters+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//function=[Function] '(' parameters+=Expression ("," parameters+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//function=[Function]
		public Assignment getFunctionAssignment_0() { return cFunctionAssignment_0; }
		
		//[Function]
		public CrossReference getFunctionFunctionCrossReference_0_0() { return cFunctionFunctionCrossReference_0_0; }
		
		//ID
		public RuleCall getFunctionFunctionIDTerminalRuleCall_0_0_1() { return cFunctionFunctionIDTerminalRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//parameters+=Expression
		public Assignment getParametersAssignment_2() { return cParametersAssignment_2; }
		
		//Expression
		public RuleCall getParametersExpressionParserRuleCall_2_0() { return cParametersExpressionParserRuleCall_2_0; }
		
		//("," parameters+=Expression)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//parameters+=Expression
		public Assignment getParametersAssignment_3_1() { return cParametersAssignment_3_1; }
		
		//Expression
		public RuleCall getParametersExpressionParserRuleCall_3_1_0() { return cParametersExpressionParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Expression");
		private final RuleCall cExternExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		/// *****************************************************************************
		// *       EXPRESSIONS                                                         *
		// ***************************************************************************** / Expression:
		//	ExternExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ExternExpression
		public RuleCall getExternExpressionParserRuleCall() { return cExternExpressionParserRuleCall; }
	}
	public class ExternExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ExternExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionSTRING_EXTTerminalRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAmpersandKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSegmentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSegmentsExpressionParserRuleCall_1_1_0 = (RuleCall)cSegmentsAssignment_1_1.eContents().get(0);
		
		////ExternExpression | EnumLiteralRef | IntegerLiteral | BooleanLiteral | StringLiteral | DoubleLiteral | NotExpression | UnaryMinus | PlusExpression | MinusExpression | TimesExpression | DivExpression | ModExpression | EqualsExpression | NotEqualsExpression | GreaterExpression | LowerExpression | GreaterOrEqualExpression | LowerOrEqualExpression | AndExpression | OrExpression | PropertyReference | ArrayIndex | ExpressionGroup | FunctionCallExpression | MessageParameter | Reference;
		//ExternExpression:
		//	expression=STRING_EXT ('&' segments+=Expression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//expression=STRING_EXT ('&' segments+=Expression)*
		public Group getGroup() { return cGroup; }
		
		//expression=STRING_EXT
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }
		
		//STRING_EXT
		public RuleCall getExpressionSTRING_EXTTerminalRuleCall_0_0() { return cExpressionSTRING_EXTTerminalRuleCall_0_0; }
		
		//('&' segments+=Expression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'&'
		public Keyword getAmpersandKeyword_1_0() { return cAmpersandKeyword_1_0; }
		
		//segments+=Expression
		public Assignment getSegmentsAssignment_1_1() { return cSegmentsAssignment_1_1; }
		
		//Expression
		public RuleCall getSegmentsExpressionParserRuleCall_1_1_0() { return cSegmentsExpressionParserRuleCall_1_1_0; }
	}
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigurationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cInstancesAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cInstancesInstanceParserRuleCall_4_0_0 = (RuleCall)cInstancesAssignment_4_0.eContents().get(0);
		private final Assignment cConnectorsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cConnectorsAbstractConnectorParserRuleCall_4_1_0 = (RuleCall)cConnectorsAssignment_4_1.eContents().get(0);
		private final Assignment cPropassignsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cPropassignsConfigPropertyAssignParserRuleCall_4_2_0 = (RuleCall)cPropassignsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *****************************************************************************
		// *       CONFIGURATIONS                                                      *
		// ***************************************************************************** / Configuration:
		//	'configuration' name=ID annotations+=PlatformAnnotation* '{' (instances+=Instance | connectors+=AbstractConnector |
		//	propassigns+=ConfigPropertyAssign)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'configuration' name=ID annotations+=PlatformAnnotation* '{' (instances+=Instance | connectors+=AbstractConnector |
		//propassigns+=ConfigPropertyAssign)* '}'
		public Group getGroup() { return cGroup; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_0() { return cConfigurationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(instances+=Instance | connectors+=AbstractConnector | propassigns+=ConfigPropertyAssign)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//instances+=Instance
		public Assignment getInstancesAssignment_4_0() { return cInstancesAssignment_4_0; }
		
		//Instance
		public RuleCall getInstancesInstanceParserRuleCall_4_0_0() { return cInstancesInstanceParserRuleCall_4_0_0; }
		
		//connectors+=AbstractConnector
		public Assignment getConnectorsAssignment_4_1() { return cConnectorsAssignment_4_1; }
		
		//AbstractConnector
		public RuleCall getConnectorsAbstractConnectorParserRuleCall_4_1_0() { return cConnectorsAbstractConnectorParserRuleCall_4_1_0; }
		
		//propassigns+=ConfigPropertyAssign
		public Assignment getPropassignsAssignment_4_2() { return cPropassignsAssignment_4_2; }
		
		//ConfigPropertyAssign
		public RuleCall getPropassignsConfigPropertyAssignParserRuleCall_4_2_0() { return cPropassignsConfigPropertyAssignParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class InstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Instance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeThingCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeThingIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeThingCrossReference_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		
		//Instance:
		//	'instance' name=ID ':' type=[Thing] annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'instance' name=ID ':' type=[Thing] annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'instance'
		public Keyword getInstanceKeyword_0() { return cInstanceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[Thing]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[Thing]
		public CrossReference getTypeThingCrossReference_3_0() { return cTypeThingCrossReference_3_0; }
		
		//ID
		public RuleCall getTypeThingIDTerminalRuleCall_3_0_1() { return cTypeThingIDTerminalRuleCall_3_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
	}
	public class ConfigPropertyAssignElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ConfigPropertyAssign");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInstanceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInstanceInstanceRefParserRuleCall_1_0 = (RuleCall)cInstanceAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPropertyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPropertyPropertyCrossReference_3_0 = (CrossReference)cPropertyAssignment_3.eContents().get(0);
		private final RuleCall cPropertyPropertyIDTerminalRuleCall_3_0_1 = (RuleCall)cPropertyPropertyCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIndexAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIndexExpressionParserRuleCall_4_1_0 = (RuleCall)cIndexAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cInitAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cInitExpressionParserRuleCall_6_0 = (RuleCall)cInitAssignment_6.eContents().get(0);
		private final Assignment cAnnotationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_7_0 = (RuleCall)cAnnotationsAssignment_7.eContents().get(0);
		
		//ConfigPropertyAssign:
		//	'set' instance=InstanceRef '.' property=[Property] ('[' index+=Expression ']')* '=' init=Expression
		//	annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'set' instance=InstanceRef '.' property=[Property] ('[' index+=Expression ']')* '=' init=Expression
		//annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'set'
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }
		
		//instance=InstanceRef
		public Assignment getInstanceAssignment_1() { return cInstanceAssignment_1; }
		
		//InstanceRef
		public RuleCall getInstanceInstanceRefParserRuleCall_1_0() { return cInstanceInstanceRefParserRuleCall_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//property=[Property]
		public Assignment getPropertyAssignment_3() { return cPropertyAssignment_3; }
		
		//[Property]
		public CrossReference getPropertyPropertyCrossReference_3_0() { return cPropertyPropertyCrossReference_3_0; }
		
		//ID
		public RuleCall getPropertyPropertyIDTerminalRuleCall_3_0_1() { return cPropertyPropertyIDTerminalRuleCall_3_0_1; }
		
		//('[' index+=Expression ']')*
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//index+=Expression
		public Assignment getIndexAssignment_4_1() { return cIndexAssignment_4_1; }
		
		//Expression
		public RuleCall getIndexExpressionParserRuleCall_4_1_0() { return cIndexExpressionParserRuleCall_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_2() { return cRightSquareBracketKeyword_4_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//init=Expression
		public Assignment getInitAssignment_6() { return cInitAssignment_6; }
		
		//Expression
		public RuleCall getInitExpressionParserRuleCall_6_0() { return cInitExpressionParserRuleCall_6_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_7() { return cAnnotationsAssignment_7; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_7_0() { return cAnnotationsPlatformAnnotationParserRuleCall_7_0; }
	}
	public class AbstractConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.AbstractConnector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConnectorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalConnectorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractConnector:
		//	Connector | ExternalConnector;
		@Override public ParserRule getRule() { return rule; }
		
		//Connector | ExternalConnector
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_0() { return cConnectorParserRuleCall_0; }
		
		//ExternalConnector
		public RuleCall getExternalConnectorParserRuleCall_1() { return cExternalConnectorParserRuleCall_1; }
	}
	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.Connector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCliAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCliInstanceRefParserRuleCall_2_0 = (RuleCall)cCliAssignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRequiredAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRequiredRequiredPortCrossReference_4_0 = (CrossReference)cRequiredAssignment_4.eContents().get(0);
		private final RuleCall cRequiredRequiredPortIDTerminalRuleCall_4_0_1 = (RuleCall)cRequiredRequiredPortCrossReference_4_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSrvAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSrvInstanceRefParserRuleCall_6_0 = (RuleCall)cSrvAssignment_6.eContents().get(0);
		private final Keyword cFullStopKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cProvidedAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cProvidedProvidedPortCrossReference_8_0 = (CrossReference)cProvidedAssignment_8.eContents().get(0);
		private final RuleCall cProvidedProvidedPortIDTerminalRuleCall_8_0_1 = (RuleCall)cProvidedProvidedPortCrossReference_8_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_9_0 = (RuleCall)cAnnotationsAssignment_9.eContents().get(0);
		
		//Connector:
		//	'connector' name=ID? cli=InstanceRef '.' required=[RequiredPort] '=>' srv=InstanceRef '.' provided=[ProvidedPort]
		//	annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'connector' name=ID? cli=InstanceRef '.' required=[RequiredPort] '=>' srv=InstanceRef '.' provided=[ProvidedPort]
		//annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'connector'
		public Keyword getConnectorKeyword_0() { return cConnectorKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//cli=InstanceRef
		public Assignment getCliAssignment_2() { return cCliAssignment_2; }
		
		//InstanceRef
		public RuleCall getCliInstanceRefParserRuleCall_2_0() { return cCliInstanceRefParserRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//required=[RequiredPort]
		public Assignment getRequiredAssignment_4() { return cRequiredAssignment_4; }
		
		//[RequiredPort]
		public CrossReference getRequiredRequiredPortCrossReference_4_0() { return cRequiredRequiredPortCrossReference_4_0; }
		
		//ID
		public RuleCall getRequiredRequiredPortIDTerminalRuleCall_4_0_1() { return cRequiredRequiredPortIDTerminalRuleCall_4_0_1; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_5() { return cEqualsSignGreaterThanSignKeyword_5; }
		
		//srv=InstanceRef
		public Assignment getSrvAssignment_6() { return cSrvAssignment_6; }
		
		//InstanceRef
		public RuleCall getSrvInstanceRefParserRuleCall_6_0() { return cSrvInstanceRefParserRuleCall_6_0; }
		
		//'.'
		public Keyword getFullStopKeyword_7() { return cFullStopKeyword_7; }
		
		//provided=[ProvidedPort]
		public Assignment getProvidedAssignment_8() { return cProvidedAssignment_8; }
		
		//[ProvidedPort]
		public CrossReference getProvidedProvidedPortCrossReference_8_0() { return cProvidedProvidedPortCrossReference_8_0; }
		
		//ID
		public RuleCall getProvidedProvidedPortIDTerminalRuleCall_8_0_1() { return cProvidedProvidedPortIDTerminalRuleCall_8_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_9() { return cAnnotationsAssignment_9; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_9_0() { return cAnnotationsPlatformAnnotationParserRuleCall_9_0; }
	}
	public class ExternalConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ExternalConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInstAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInstInstanceRefParserRuleCall_2_0 = (RuleCall)cInstAssignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPortPortCrossReference_4_0 = (CrossReference)cPortAssignment_4.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_4_0_1 = (RuleCall)cPortPortCrossReference_4_0.eContents().get(1);
		private final Keyword cOverKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cProtocolAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cProtocolProtocolCrossReference_6_0 = (CrossReference)cProtocolAssignment_6.eContents().get(0);
		private final RuleCall cProtocolProtocolIDTerminalRuleCall_6_0_1 = (RuleCall)cProtocolProtocolCrossReference_6_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_7_0 = (RuleCall)cAnnotationsAssignment_7.eContents().get(0);
		
		//ExternalConnector:
		//	'connector' name=ID? inst=InstanceRef '.' port=[Port] 'over' protocol=[Protocol] annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'connector' name=ID? inst=InstanceRef '.' port=[Port] 'over' protocol=[Protocol] annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'connector'
		public Keyword getConnectorKeyword_0() { return cConnectorKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//inst=InstanceRef
		public Assignment getInstAssignment_2() { return cInstAssignment_2; }
		
		//InstanceRef
		public RuleCall getInstInstanceRefParserRuleCall_2_0() { return cInstInstanceRefParserRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//port=[Port]
		public Assignment getPortAssignment_4() { return cPortAssignment_4; }
		
		//[Port]
		public CrossReference getPortPortCrossReference_4_0() { return cPortPortCrossReference_4_0; }
		
		//ID
		public RuleCall getPortPortIDTerminalRuleCall_4_0_1() { return cPortPortIDTerminalRuleCall_4_0_1; }
		
		//'over'
		public Keyword getOverKeyword_5() { return cOverKeyword_5; }
		
		//protocol=[Protocol]
		public Assignment getProtocolAssignment_6() { return cProtocolAssignment_6; }
		
		//[Protocol]
		public CrossReference getProtocolProtocolCrossReference_6_0() { return cProtocolProtocolCrossReference_6_0; }
		
		//ID
		public RuleCall getProtocolProtocolIDTerminalRuleCall_6_0_1() { return cProtocolProtocolIDTerminalRuleCall_6_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_7() { return cAnnotationsAssignment_7; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_7_0() { return cAnnotationsPlatformAnnotationParserRuleCall_7_0; }
	}
	public class InstanceRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.InstanceRef");
		private final Assignment cInstanceAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cInstanceInstanceCrossReference_0 = (CrossReference)cInstanceAssignment.eContents().get(0);
		private final RuleCall cInstanceInstanceIDTerminalRuleCall_0_1 = (RuleCall)cInstanceInstanceCrossReference_0.eContents().get(1);
		
		//InstanceRef:
		//	instance=[Instance];
		@Override public ParserRule getRule() { return rule; }
		
		//instance=[Instance]
		public Assignment getInstanceAssignment() { return cInstanceAssignment; }
		
		//[Instance]
		public CrossReference getInstanceInstanceCrossReference_0() { return cInstanceInstanceCrossReference_0; }
		
		//ID
		public RuleCall getInstanceInstanceIDTerminalRuleCall_0_1() { return cInstanceInstanceIDTerminalRuleCall_0_1; }
	}
	
	
	private final ThingMLModelElements pThingMLModel;
	private final PlatformAnnotationElements pPlatformAnnotation;
	private final TypeElements pType;
	private final PrimitiveTypeElements pPrimitiveType;
	private final ObjectTypeElements pObjectType;
	private final EnumerationElements pEnumeration;
	private final EnumerationLiteralElements pEnumerationLiteral;
	private final ThingElements pThing;
	private final PropertyAssignElements pPropertyAssign;
	private final ProtocolElements pProtocol;
	private final FunctionElements pFunction;
	private final PropertyElements pProperty;
	private final MessageElements pMessage;
	private final ParameterElements pParameter;
	private final PortElements pPort;
	private final RequiredPortElements pRequiredPort;
	private final ProvidedPortElements pProvidedPort;
	private final InternalPortElements pInternalPort;
	private final StreamElements pStream;
	private final SourceElements pSource;
	private final ViewSourceElements pViewSource;
	private final ReferencedElmtElements pReferencedElmt;
	private final ElmtPropertyElements pElmtProperty;
	private final JoinSourcesElements pJoinSources;
	private final MergeSourcesElements pMergeSources;
	private final SimpleSourceElements pSimpleSource;
	private final FilterElements pFilter;
	private final LengthWindowElements pLengthWindow;
	private final TimeWindowElements pTimeWindow;
	private final MessageParameterElements pMessageParameter;
	private final SimpleParamRefElements pSimpleParamRef;
	private final ArrayParamRefElements pArrayParamRef;
	private final LengthArrayElements pLengthArray;
	private final StateMachineElements pStateMachine;
	private final StateElements pState;
	private final RegionElements pRegion;
	private final State_ImplElements pState_Impl;
	private final FinalStateElements pFinalState;
	private final CompositeState_ImplElements pCompositeState_Impl;
	private final SessionElements pSession;
	private final ParallelRegionElements pParallelRegion;
	private final TransitionElements pTransition;
	private final InternalTransitionElements pInternalTransition;
	private final EventElements pEvent;
	private final ReceiveMessageElements pReceiveMessage;
	private final ActionElements pAction;
	private final VariableElements pVariable;
	private final ActionBlockElements pActionBlock;
	private final ExternStatementElements pExternStatement;
	private final LocalVariableElements pLocalVariable;
	private final SendActionElements pSendAction;
	private final VariableAssignmentElements pVariableAssignment;
	private final IncrementElements pIncrement;
	private final DecrementElements pDecrement;
	private final LoopActionElements pLoopAction;
	private final ConditionalActionElements pConditionalAction;
	private final ReturnActionElements pReturnAction;
	private final PrintActionElements pPrintAction;
	private final ErrorActionElements pErrorAction;
	private final StartSessionElements pStartSession;
	private final FunctionCallStatementElements pFunctionCallStatement;
	private final ExpressionElements pExpression;
	private final ExternExpressionElements pExternExpression;
	private final ConfigurationElements pConfiguration;
	private final InstanceElements pInstance;
	private final ConfigPropertyAssignElements pConfigPropertyAssign;
	private final AbstractConnectorElements pAbstractConnector;
	private final ConnectorElements pConnector;
	private final ExternalConnectorElements pExternalConnector;
	private final InstanceRefElements pInstanceRef;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING_EXT;
	private final TerminalRule tSTRING_LIT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public ThingMLGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pThingMLModel = new ThingMLModelElements();
		this.pPlatformAnnotation = new PlatformAnnotationElements();
		this.pType = new TypeElements();
		this.pPrimitiveType = new PrimitiveTypeElements();
		this.pObjectType = new ObjectTypeElements();
		this.pEnumeration = new EnumerationElements();
		this.pEnumerationLiteral = new EnumerationLiteralElements();
		this.pThing = new ThingElements();
		this.pPropertyAssign = new PropertyAssignElements();
		this.pProtocol = new ProtocolElements();
		this.pFunction = new FunctionElements();
		this.pProperty = new PropertyElements();
		this.pMessage = new MessageElements();
		this.pParameter = new ParameterElements();
		this.pPort = new PortElements();
		this.pRequiredPort = new RequiredPortElements();
		this.pProvidedPort = new ProvidedPortElements();
		this.pInternalPort = new InternalPortElements();
		this.pStream = new StreamElements();
		this.pSource = new SourceElements();
		this.pViewSource = new ViewSourceElements();
		this.pReferencedElmt = new ReferencedElmtElements();
		this.pElmtProperty = new ElmtPropertyElements();
		this.pJoinSources = new JoinSourcesElements();
		this.pMergeSources = new MergeSourcesElements();
		this.pSimpleSource = new SimpleSourceElements();
		this.pFilter = new FilterElements();
		this.pLengthWindow = new LengthWindowElements();
		this.pTimeWindow = new TimeWindowElements();
		this.pMessageParameter = new MessageParameterElements();
		this.pSimpleParamRef = new SimpleParamRefElements();
		this.pArrayParamRef = new ArrayParamRefElements();
		this.pLengthArray = new LengthArrayElements();
		this.pStateMachine = new StateMachineElements();
		this.pState = new StateElements();
		this.pRegion = new RegionElements();
		this.pState_Impl = new State_ImplElements();
		this.pFinalState = new FinalStateElements();
		this.pCompositeState_Impl = new CompositeState_ImplElements();
		this.pSession = new SessionElements();
		this.pParallelRegion = new ParallelRegionElements();
		this.pTransition = new TransitionElements();
		this.pInternalTransition = new InternalTransitionElements();
		this.pEvent = new EventElements();
		this.pReceiveMessage = new ReceiveMessageElements();
		this.pAction = new ActionElements();
		this.pVariable = new VariableElements();
		this.pActionBlock = new ActionBlockElements();
		this.pExternStatement = new ExternStatementElements();
		this.pLocalVariable = new LocalVariableElements();
		this.pSendAction = new SendActionElements();
		this.pVariableAssignment = new VariableAssignmentElements();
		this.pIncrement = new IncrementElements();
		this.pDecrement = new DecrementElements();
		this.pLoopAction = new LoopActionElements();
		this.pConditionalAction = new ConditionalActionElements();
		this.pReturnAction = new ReturnActionElements();
		this.pPrintAction = new PrintActionElements();
		this.pErrorAction = new ErrorActionElements();
		this.pStartSession = new StartSessionElements();
		this.pFunctionCallStatement = new FunctionCallStatementElements();
		this.pExpression = new ExpressionElements();
		this.pExternExpression = new ExternExpressionElements();
		this.pConfiguration = new ConfigurationElements();
		this.pInstance = new InstanceElements();
		this.pConfigPropertyAssign = new ConfigPropertyAssignElements();
		this.pAbstractConnector = new AbstractConnectorElements();
		this.pConnector = new ConnectorElements();
		this.pExternalConnector = new ExternalConnectorElements();
		this.pInstanceRef = new InstanceRefElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.INT");
		this.tSTRING_EXT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.STRING_EXT");
		this.tSTRING_LIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.STRING_LIT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.thingml.xtext.ThingML.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.thingml.xtext.ThingML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//ThingMLModel:
	//	('import' imports+=[ThingMLModel|STRING_LIT])* (types+=Type | protocols+=Protocol | configs+=Configuration)*;
	public ThingMLModelElements getThingMLModelAccess() {
		return pThingMLModel;
	}
	
	public ParserRule getThingMLModelRule() {
		return getThingMLModelAccess().getRule();
	}
	
	//PlatformAnnotation:
	//	'@' name=ID value=STRING_LIT;
	public PlatformAnnotationElements getPlatformAnnotationAccess() {
		return pPlatformAnnotation;
	}
	
	public ParserRule getPlatformAnnotationRule() {
		return getPlatformAnnotationAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       TYPES / ENUMERATIONS                                                *
	// ***************************************************************************** / Type:
	//	PrimitiveType | ObjectType | Enumeration | Thing;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//PrimitiveType:
	//	'datatype' name=ID '<' ByteSize=INT '>' annotations+=PlatformAnnotation* ';';
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return pPrimitiveType;
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//ObjectType:
	//	'object' name=ID annotations+=PlatformAnnotation* ';';
	public ObjectTypeElements getObjectTypeAccess() {
		return pObjectType;
	}
	
	public ParserRule getObjectTypeRule() {
		return getObjectTypeAccess().getRule();
	}
	
	//Enumeration:
	//	'enumeration' name=ID annotations+=PlatformAnnotation* '{' literals+=EnumerationLiteral* '}';
	public EnumerationElements getEnumerationAccess() {
		return pEnumeration;
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//EnumerationLiteral:
	//	name=ID annotations+=PlatformAnnotation*;
	public EnumerationLiteralElements getEnumerationLiteralAccess() {
		return pEnumerationLiteral;
	}
	
	public ParserRule getEnumerationLiteralRule() {
		return getEnumerationLiteralAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       THING / COMPONENT MODEL                                             *
	// ***************************************************************************** / Thing:
	//	'thing' ^fragment?='fragment'? name=ID ('includes' includes+=[Thing] ("," includes+=[Thing])*)?
	//	annotations+=PlatformAnnotation* '{' (messages+=Message | ports+=Port | properties+=Property | functions+=Function |
	//	assign+=PropertyAssign | behaviour+=StateMachine | streams+=Stream)*
	//	'}';
	public ThingElements getThingAccess() {
		return pThing;
	}
	
	public ParserRule getThingRule() {
		return getThingAccess().getRule();
	}
	
	//PropertyAssign:
	//	'set' property=[Property] ('[' index+=Expression ']')* '=' init=Expression annotations+=PlatformAnnotation*;
	public PropertyAssignElements getPropertyAssignAccess() {
		return pPropertyAssign;
	}
	
	public ParserRule getPropertyAssignRule() {
		return getPropertyAssignAccess().getRule();
	}
	
	//Protocol:
	//	'protocol' name=ID annotations+=PlatformAnnotation* ';';
	public ProtocolElements getProtocolAccess() {
		return pProtocol;
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//Function:
	//	'function' name=ID '(' parameters+=Parameter ("," parameters+=Parameter)* ')' (':' type=[Type])?
	//	annotations+=PlatformAnnotation* 'is' body=Action
	//	//('isArray' isArray=EBoolean)?
	//	//('cardinality' cardinality=Expression)?
	//;
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//Property:
	//	'property' name=ID ':' type=[Type] ('=' init=Expression)?
	//	annotations+=PlatformAnnotation*
	//	//('isArray' isArray=EBoolean)?
	//	//('changeable' changeable=EBoolean)?
	//	//('cardinality' cardinality=Expression)?
	//;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//Message:
	//	'message' name=ID '(' (parameters+=Parameter ("," parameters+=Parameter)*)? ')'
	//	annotations+=PlatformAnnotation* ';';
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//Parameter:
	//	name=ID ':' type=[Type] annotations+=PlatformAnnotation*
	//	//		('isArray' isArray=EBoolean)?
	//	//		('cardinality' cardinality=Expression)?
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Port:
	//	RequiredPort | ProvidedPort | InternalPort;
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//RequiredPort:
	//	optional?='optional'? 'required' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] (","
	//	sends+=[Message])* | 'receives' receives+=[Message] ("," receives+=[Message])*)*
	//	'}';
	public RequiredPortElements getRequiredPortAccess() {
		return pRequiredPort;
	}
	
	public ParserRule getRequiredPortRule() {
		return getRequiredPortAccess().getRule();
	}
	
	//ProvidedPort:
	//	'provided' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
	//	'receives' receives+=[Message] ("," receives+=[Message])*)*
	//	'}';
	public ProvidedPortElements getProvidedPortAccess() {
		return pProvidedPort;
	}
	
	public ParserRule getProvidedPortRule() {
		return getProvidedPortAccess().getRule();
	}
	
	//InternalPort:
	//	'internal' 'port' name=ID annotations+=PlatformAnnotation* '{' ('sends' sends+=[Message] ("," sends+=[Message])* |
	//	'receives' receives+=[Message] ("," receives+=[Message])*)*
	//	'}';
	public InternalPortElements getInternalPortAccess() {
		return pInternalPort;
	}
	
	public ParserRule getInternalPortRule() {
		return getInternalPortAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       CEP STREAMS                                                         *
	// ***************************************************************************** / Stream:
	//	'stream' name=ID annotations+=PlatformAnnotation* 'from' input=Source ('select' selection+=LocalVariable (","
	//	selection+=LocalVariable)*)?
	//	'produce' output=SendAction;
	public StreamElements getStreamAccess() {
		return pStream;
	}
	
	public ParserRule getStreamRule() {
		return getStreamAccess().getRule();
	}
	
	//Source:
	//	JoinSources | MergeSources | SimpleSource;
	public SourceElements getSourceAccess() {
		return pSource;
	}
	
	public ParserRule getSourceRule() {
		return getSourceAccess().getRule();
	}
	
	//ViewSource:
	//	Filter | LengthWindow | TimeWindow;
	public ViewSourceElements getViewSourceAccess() {
		return pViewSource;
	}
	
	public ParserRule getViewSourceRule() {
		return getViewSourceAccess().getRule();
	}
	
	//ReferencedElmt:
	//	Message | Parameter | Property | ReceiveMessage | LocalVariable | JoinSources | MergeSources | SimpleSource |
	//	MessageParameter;
	public ReferencedElmtElements getReferencedElmtAccess() {
		return pReferencedElmt;
	}
	
	public ParserRule getReferencedElmtRule() {
		return getReferencedElmtAccess().getRule();
	}
	
	//ElmtProperty:
	//	SimpleParamRef | ArrayParamRef | LengthArray;
	public ElmtPropertyElements getElmtPropertyAccess() {
		return pElmtProperty;
	}
	
	public ParserRule getElmtPropertyRule() {
		return getElmtPropertyAccess().getRule();
	}
	
	//JoinSources:
	//	'join' name=ID ':' '[' sources+=Source ("&" sources+=Source)* '->' resultMessage=[Message] '(' rules+=Expression (","
	//	rules+=Expression)* ')' ']' ('::' operators+=ViewSource)*;
	public JoinSourcesElements getJoinSourcesAccess() {
		return pJoinSources;
	}
	
	public ParserRule getJoinSourcesRule() {
		return getJoinSourcesAccess().getRule();
	}
	
	//MergeSources:
	//	'merge' name=ID ':' '[' sources+=Source ("|" sources+=Source)* '->' resultMessage=[Message] ']' ('::'
	//	operators+=ViewSource)*;
	public MergeSourcesElements getMergeSourcesAccess() {
		return pMergeSources;
	}
	
	public ParserRule getMergeSourcesRule() {
		return getMergeSourcesAccess().getRule();
	}
	
	//SimpleSource:
	//	name=ID ':' message=ReceiveMessage ('::' operators+=ViewSource)*;
	public SimpleSourceElements getSimpleSourceAccess() {
		return pSimpleSource;
	}
	
	public ParserRule getSimpleSourceRule() {
		return getSimpleSourceAccess().getRule();
	}
	
	//Filter:
	//	'keep' 'if' guard=Expression;
	public FilterElements getFilterAccess() {
		return pFilter;
	}
	
	public ParserRule getFilterRule() {
		return getFilterAccess().getRule();
	}
	
	//LengthWindow:
	//	'buffer' size=Expression ('by' step=Expression)?;
	public LengthWindowElements getLengthWindowAccess() {
		return pLengthWindow;
	}
	
	public ParserRule getLengthWindowRule() {
		return getLengthWindowAccess().getRule();
	}
	
	//TimeWindow:
	//	'during' duration=Expression ('by' step=Expression)?;
	public TimeWindowElements getTimeWindowAccess() {
		return pTimeWindow;
	}
	
	public ParserRule getTimeWindowRule() {
		return getTimeWindowAccess().getRule();
	}
	
	//MessageParameter:
	//	name=ID ':' msgRef=[Message];
	public MessageParameterElements getMessageParameterAccess() {
		return pMessageParameter;
	}
	
	public ParserRule getMessageParameterRule() {
		return getMessageParameterAccess().getRule();
	}
	
	//SimpleParamRef:
	//	parameterRef=[Parameter];
	public SimpleParamRefElements getSimpleParamRefAccess() {
		return pSimpleParamRef;
	}
	
	public ParserRule getSimpleParamRefRule() {
		return getSimpleParamRefAccess().getRule();
	}
	
	//ArrayParamRef:
	//	parameterRef=[Parameter] '[' ']';
	public ArrayParamRefElements getArrayParamRefAccess() {
		return pArrayParamRef;
	}
	
	public ParserRule getArrayParamRefRule() {
		return getArrayParamRefAccess().getRule();
	}
	
	//LengthArray:
	//	{LengthArray}
	//	'length';
	public LengthArrayElements getLengthArrayAccess() {
		return pLengthArray;
	}
	
	public ParserRule getLengthArrayRule() {
		return getLengthArrayAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       STATE MECHINES                                                      *
	// ***************************************************************************** / StateMachine:
	//	'statechart' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{' ('on'
	//	'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
	//	internal+=InternalTransition)*
	//	region+=ParallelRegion*
	//	'}';
	public StateMachineElements getStateMachineAccess() {
		return pStateMachine;
	}
	
	public ParserRule getStateMachineRule() {
		return getStateMachineAccess().getRule();
	}
	
	//State:
	//	State_Impl | StateMachine | FinalState | CompositeState_Impl | Session;
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Region:
	//	CompositeState_Impl | ParallelRegion | Session;
	public RegionElements getRegionAccess() {
		return pRegion;
	}
	
	public ParserRule getRegionRule() {
		return getRegionAccess().getRule();
	}
	
	//State_Impl State:
	//	'state' name=ID annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)?
	//	(properties+=Property | internal+=InternalTransition | outgoing+=Transition)*
	//	'}'
	public State_ImplElements getState_ImplAccess() {
		return pState_Impl;
	}
	
	public ParserRule getState_ImplRule() {
		return getState_ImplAccess().getRule();
	}
	
	//FinalState:
	//	'final' 'state' name=ID annotations+=PlatformAnnotation* ';';
	public FinalStateElements getFinalStateAccess() {
		return pFinalState;
	}
	
	public ParserRule getFinalStateRule() {
		return getFinalStateAccess().getRule();
	}
	
	//CompositeState_Impl CompositeState:
	//	'composite' 'state' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation*
	//	'{' ('on' 'entry' entry=Action)? ('on' 'exit' exit=Action)? (properties+=Property | substate+=State |
	//	internal+=InternalTransition | outgoing+=Transition)*
	//	region+=ParallelRegion*
	//	'}'
	public CompositeState_ImplElements getCompositeState_ImplAccess() {
		return pCompositeState_Impl;
	}
	
	public ParserRule getCompositeState_ImplRule() {
		return getCompositeState_ImplAccess().getRule();
	}
	
	//Session:
	//	'session' name=ID? 'init' initial=[State] annotations+=PlatformAnnotation* '{' ('on' 'entry' entry=Action)? ('on'
	//	'exit' exit=Action)? (properties+=Property | substate+=State | internal+=InternalTransition)*
	//	region+=ParallelRegion*
	//	'}';
	public SessionElements getSessionAccess() {
		return pSession;
	}
	
	public ParserRule getSessionRule() {
		return getSessionAccess().getRule();
	}
	
	//ParallelRegion:
	//	'region' name=ID? 'init' initial=[State] ('keeps' history?='history')? annotations+=PlatformAnnotation* '{'
	//	substate+=State*
	//	'}';
	public ParallelRegionElements getParallelRegionAccess() {
		return pParallelRegion;
	}
	
	public ParserRule getParallelRegionRule() {
		return getParallelRegionAccess().getRule();
	}
	
	//Transition:
	//	'transition' name=ID? '->' target=[State] annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard'
	//	guard=Expression)? ('action' action=Action)?;
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//InternalTransition:
	//	{InternalTransition}
	//	'internal' name=ID?
	//	annotations+=PlatformAnnotation* ('event' event+=Event)* ('guard' guard=Expression)? ('action' action=Action)?;
	public InternalTransitionElements getInternalTransitionAccess() {
		return pInternalTransition;
	}
	
	public ParserRule getInternalTransitionRule() {
		return getInternalTransitionAccess().getRule();
	}
	
	//Event:
	//	ReceiveMessage;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//ReceiveMessage:
	//	port=[Port] '?' message=[Message];
	public ReceiveMessageElements getReceiveMessageAccess() {
		return pReceiveMessage;
	}
	
	public ParserRule getReceiveMessageRule() {
		return getReceiveMessageAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       ACTIONS                                                             *
	// ***************************************************************************** / Action:
	//	ActionBlock | ExternStatement | SendAction | VariableAssignment | Increment | Decrement | LoopAction |
	//	ConditionalAction | ReturnAction | PrintAction | ErrorAction | StartSession | FunctionCallStatement | LocalVariable;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Variable:
	//	Parameter | Property | LocalVariable;
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//ActionBlock:
	//	{ActionBlock}
	//	'do' actions+=Action* 'end';
	public ActionBlockElements getActionBlockAccess() {
		return pActionBlock;
	}
	
	public ParserRule getActionBlockRule() {
		return getActionBlockAccess().getRule();
	}
	
	//ExternStatement:
	//	statement=STRING_EXT ('&' segments+=Expression)*;
	public ExternStatementElements getExternStatementAccess() {
		return pExternStatement;
	}
	
	public ParserRule getExternStatementRule() {
		return getExternStatementAccess().getRule();
	}
	
	//LocalVariable:
	//	^changeable?='readonly'? 'var' name=ID ':' type=[Type] ('=' init=Expression)? annotations+=PlatformAnnotation*
	//	//('isArray' isArray=EBoolean)?
	//	//('cardinality' cardinality=Expression)?
	//;
	public LocalVariableElements getLocalVariableAccess() {
		return pLocalVariable;
	}
	
	public ParserRule getLocalVariableRule() {
		return getLocalVariableAccess().getRule();
	}
	
	//SendAction:
	//	port=[Port] '!' message=[Message] '(' parameters+=Expression ("," parameters+=Expression)* ')';
	public SendActionElements getSendActionAccess() {
		return pSendAction;
	}
	
	public ParserRule getSendActionRule() {
		return getSendActionAccess().getRule();
	}
	
	//VariableAssignment:
	//	property=[Variable] ('[' index+=Expression ']')* '=' expression=Expression;
	public VariableAssignmentElements getVariableAssignmentAccess() {
		return pVariableAssignment;
	}
	
	public ParserRule getVariableAssignmentRule() {
		return getVariableAssignmentAccess().getRule();
	}
	
	//Increment:
	//	var=[Variable] '++';
	public IncrementElements getIncrementAccess() {
		return pIncrement;
	}
	
	public ParserRule getIncrementRule() {
		return getIncrementAccess().getRule();
	}
	
	//Decrement:
	//	var=[Variable] '--';
	public DecrementElements getDecrementAccess() {
		return pDecrement;
	}
	
	public ParserRule getDecrementRule() {
		return getDecrementAccess().getRule();
	}
	
	//LoopAction:
	//	'while' '(' condition=Expression ')' action=Action;
	public LoopActionElements getLoopActionAccess() {
		return pLoopAction;
	}
	
	public ParserRule getLoopActionRule() {
		return getLoopActionAccess().getRule();
	}
	
	//ConditionalAction:
	//	'if' '(' condition=Expression ')' action=Action ('else' elseAction=Action)?;
	public ConditionalActionElements getConditionalActionAccess() {
		return pConditionalAction;
	}
	
	public ParserRule getConditionalActionRule() {
		return getConditionalActionAccess().getRule();
	}
	
	//ReturnAction:
	//	'return' exp=Expression;
	public ReturnActionElements getReturnActionAccess() {
		return pReturnAction;
	}
	
	public ParserRule getReturnActionRule() {
		return getReturnActionAccess().getRule();
	}
	
	//PrintAction:
	//	'print' msg=Expression;
	public PrintActionElements getPrintActionAccess() {
		return pPrintAction;
	}
	
	public ParserRule getPrintActionRule() {
		return getPrintActionAccess().getRule();
	}
	
	//ErrorAction:
	//	'error' msg=Expression;
	public ErrorActionElements getErrorActionAccess() {
		return pErrorAction;
	}
	
	public ParserRule getErrorActionRule() {
		return getErrorActionAccess().getRule();
	}
	
	//StartSession:
	//	'spawn' session=[Session] '{' constructor+=PropertyAssign* '}';
	public StartSessionElements getStartSessionAccess() {
		return pStartSession;
	}
	
	public ParserRule getStartSessionRule() {
		return getStartSessionAccess().getRule();
	}
	
	//FunctionCallStatement:
	//	function=[Function] '(' parameters+=Expression ("," parameters+=Expression)* ')';
	public FunctionCallStatementElements getFunctionCallStatementAccess() {
		return pFunctionCallStatement;
	}
	
	public ParserRule getFunctionCallStatementRule() {
		return getFunctionCallStatementAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       EXPRESSIONS                                                         *
	// ***************************************************************************** / Expression:
	//	ExternExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	////ExternExpression | EnumLiteralRef | IntegerLiteral | BooleanLiteral | StringLiteral | DoubleLiteral | NotExpression | UnaryMinus | PlusExpression | MinusExpression | TimesExpression | DivExpression | ModExpression | EqualsExpression | NotEqualsExpression | GreaterExpression | LowerExpression | GreaterOrEqualExpression | LowerOrEqualExpression | AndExpression | OrExpression | PropertyReference | ArrayIndex | ExpressionGroup | FunctionCallExpression | MessageParameter | Reference;
	//ExternExpression:
	//	expression=STRING_EXT ('&' segments+=Expression)*;
	public ExternExpressionElements getExternExpressionAccess() {
		return pExternExpression;
	}
	
	public ParserRule getExternExpressionRule() {
		return getExternExpressionAccess().getRule();
	}
	
	/// *****************************************************************************
	// *       CONFIGURATIONS                                                      *
	// ***************************************************************************** / Configuration:
	//	'configuration' name=ID annotations+=PlatformAnnotation* '{' (instances+=Instance | connectors+=AbstractConnector |
	//	propassigns+=ConfigPropertyAssign)*
	//	'}';
	public ConfigurationElements getConfigurationAccess() {
		return pConfiguration;
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}
	
	//Instance:
	//	'instance' name=ID ':' type=[Thing] annotations+=PlatformAnnotation*;
	public InstanceElements getInstanceAccess() {
		return pInstance;
	}
	
	public ParserRule getInstanceRule() {
		return getInstanceAccess().getRule();
	}
	
	//ConfigPropertyAssign:
	//	'set' instance=InstanceRef '.' property=[Property] ('[' index+=Expression ']')* '=' init=Expression
	//	annotations+=PlatformAnnotation*;
	public ConfigPropertyAssignElements getConfigPropertyAssignAccess() {
		return pConfigPropertyAssign;
	}
	
	public ParserRule getConfigPropertyAssignRule() {
		return getConfigPropertyAssignAccess().getRule();
	}
	
	//AbstractConnector:
	//	Connector | ExternalConnector;
	public AbstractConnectorElements getAbstractConnectorAccess() {
		return pAbstractConnector;
	}
	
	public ParserRule getAbstractConnectorRule() {
		return getAbstractConnectorAccess().getRule();
	}
	
	//Connector:
	//	'connector' name=ID? cli=InstanceRef '.' required=[RequiredPort] '=>' srv=InstanceRef '.' provided=[ProvidedPort]
	//	annotations+=PlatformAnnotation*;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}
	
	//ExternalConnector:
	//	'connector' name=ID? inst=InstanceRef '.' port=[Port] 'over' protocol=[Protocol] annotations+=PlatformAnnotation*;
	public ExternalConnectorElements getExternalConnectorAccess() {
		return pExternalConnector;
	}
	
	public ParserRule getExternalConnectorRule() {
		return getExternalConnectorAccess().getRule();
	}
	
	//InstanceRef:
	//	instance=[Instance];
	public InstanceRefElements getInstanceRefAccess() {
		return pInstanceRef;
	}
	
	public ParserRule getInstanceRefRule() {
		return getInstanceRefAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal STRING_EXT:
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRING_EXTRule() {
		return tSTRING_EXT;
	}
	
	//terminal STRING_LIT:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_LITRule() {
		return tSTRING_LIT;
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
