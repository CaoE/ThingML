import "../thingml.thingml"

protocol MQTT
	@mqtt_broker_address "192.168.1.6"
	@mqtt_port_number "44490"
	@serializer "JSON"
	;

thing TestMQTT includes Test
@test "13456789A # 13456789A"
@conf "connector test.net over MQTT"
{
	message m1();
	message m2(p : Char);
	message m3(p : Boolean);
	message m4(p : UInt8);
	message m5(p : UInt16);
	message m6(p : Int16);
	message m7(p : UInt32);
	message m8(p : Int32);
	message m9(p : Float);
	message m10(p1 : UInt32, p2 : UInt32);

	provided port net {
		sends m1, m2, m3, m4, m5, m6, m7, m8, m9, m10
		receives m1, m2, m3, m4, m5, m6, m7, m8, m9, m10
	}
	statechart Chart init Init {
		state Init {
			internal event e : harnessIn?testIn
			guard e.c == '\'1\''	
			action net!m1()	

			internal event net?m1
			action harnessOut!testOut('\'1\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'2\''	
			action net!m2('\'X\'')	

			internal event e : net?m2
			guard e.p == '\'X\''
			action harnessOut!testOut('\'2\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'3\''	
			action net!m3((1 == 1))	

			internal event e : net?m3
			guard e.p
			action harnessOut!testOut('\'3\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'4\''	
			action net!m4(128)	

			internal event e : net?m4
			guard e.p == 128
			action harnessOut!testOut('\'4\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'5\''	
			action net!m5(33825)	

			internal event e : net?m5
			guard e.p == 33825
			action harnessOut!testOut('\'5\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'6\''	
			action net!m6(-17441)	

			internal event e : net?m6
			guard e.p == -17441
			action harnessOut!testOut('\'6\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'7\''	
			action net!m7('4294967295')	

			internal event e : net?m7
			guard e.p == '4294967295'
			action harnessOut!testOut('\'7\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'8\''	
			action net!m8('-1446609953')	

			internal event e : net?m8
			guard e.p == '-1446609953'
			action harnessOut!testOut('\'8\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'9\''	
			action net!m9('-3.14156')	

			internal event e : net?m9
			guard e.p == '-3.14156'
			action harnessOut!testOut('\'9\'')

			internal event e : harnessIn?testIn
			guard e.c == '\'A\''	
			action net!m10('1234567', '7654321')	

			internal event e : net?m10
			guard ((e.p1 == '1234567') and (e.p2 == '7654321'))
			action harnessOut!testOut('\'A\'')

		}
	}
}
